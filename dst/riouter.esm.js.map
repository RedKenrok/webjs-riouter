{"version":3,"file":"riouter.esm.js","sources":["../node_modules/path-to-regexp/dist.es2015/index.js","../src/util/Dispatcher.js","../src/Router.js","../node_modules/@riotjs/util/binding-types.js","../node_modules/@riotjs/util/strings.js","../node_modules/@riotjs/util/dom.js","../node_modules/@riotjs/util/constants.js","../node_modules/@riotjs/util/expression-types.js","../node_modules/@riotjs/dom-bindings/src/constants.js","../node_modules/@riotjs/dom-bindings/src/util/create-head-tail-placeholders.js","../node_modules/@riotjs/dom-bindings/src/util/create-template-meta.js","../node_modules/@riotjs/util/objects.js","../node_modules/@riotjs/util/checks.js","../node_modules/@riotjs/dom-bindings/src/util/udomdiff.js","../node_modules/@riotjs/dom-bindings/src/bindings/each.js","../node_modules/@riotjs/dom-bindings/src/bindings/if.js","../node_modules/@riotjs/util/misc.js","../node_modules/@riotjs/dom-bindings/src/expressions/attribute.js","../node_modules/@riotjs/dom-bindings/src/expressions/event.js","../node_modules/@riotjs/dom-bindings/src/util/normalize-string-value.js","../node_modules/@riotjs/dom-bindings/src/expressions/text.js","../node_modules/@riotjs/dom-bindings/src/expressions/value.js","../node_modules/@riotjs/dom-bindings/src/expressions/index.js","../node_modules/@riotjs/dom-bindings/src/expression.js","../node_modules/@riotjs/dom-bindings/src/util/flatten-collection-methods.js","../node_modules/@riotjs/dom-bindings/src/bindings/simple.js","../node_modules/@riotjs/dom-bindings/src/bindings/slot.js","../node_modules/@riotjs/dom-bindings/src/bindings/tag.js","../node_modules/@riotjs/dom-bindings/src/bindings/index.js","../node_modules/@riotjs/dom-bindings/src/binding.js","../node_modules/@riotjs/dom-bindings/src/util/create-DOM-tree.js","../node_modules/@riotjs/dom-bindings/src/util/inject-DOM.js","../node_modules/@riotjs/dom-bindings/src/template.js","../node_modules/riot/riot.esm.js","../src/util/symbols.js","../src/components/route.js","../src/components/router.js"],"sourcesContent":["/**\n * Tokenize input string.\n */\nfunction lexer(str) {\n    var tokens = [];\n    var i = 0;\n    while (i < str.length) {\n        var char = str[i];\n        if (char === \"*\" || char === \"+\" || char === \"?\") {\n            tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"\\\\\") {\n            tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n            continue;\n        }\n        if (char === \"{\") {\n            tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \"}\") {\n            tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n            continue;\n        }\n        if (char === \":\") {\n            var name = \"\";\n            var j = i + 1;\n            while (j < str.length) {\n                var code = str.charCodeAt(j);\n                if (\n                // `0-9`\n                (code >= 48 && code <= 57) ||\n                    // `A-Z`\n                    (code >= 65 && code <= 90) ||\n                    // `a-z`\n                    (code >= 97 && code <= 122) ||\n                    // `_`\n                    code === 95) {\n                    name += str[j++];\n                    continue;\n                }\n                break;\n            }\n            if (!name)\n                throw new TypeError(\"Missing parameter name at \" + i);\n            tokens.push({ type: \"NAME\", index: i, value: name });\n            i = j;\n            continue;\n        }\n        if (char === \"(\") {\n            var count = 1;\n            var pattern = \"\";\n            var j = i + 1;\n            if (str[j] === \"?\") {\n                throw new TypeError(\"Pattern cannot start with \\\"?\\\" at \" + j);\n            }\n            while (j < str.length) {\n                if (str[j] === \"\\\\\") {\n                    pattern += str[j++] + str[j++];\n                    continue;\n                }\n                if (str[j] === \")\") {\n                    count--;\n                    if (count === 0) {\n                        j++;\n                        break;\n                    }\n                }\n                else if (str[j] === \"(\") {\n                    count++;\n                    if (str[j + 1] !== \"?\") {\n                        throw new TypeError(\"Capturing groups are not allowed at \" + j);\n                    }\n                }\n                pattern += str[j++];\n            }\n            if (count)\n                throw new TypeError(\"Unbalanced pattern at \" + i);\n            if (!pattern)\n                throw new TypeError(\"Missing pattern at \" + i);\n            tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n            i = j;\n            continue;\n        }\n        tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n    }\n    tokens.push({ type: \"END\", index: i, value: \"\" });\n    return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str, options) {\n    if (options === void 0) { options = {}; }\n    var tokens = lexer(str);\n    var _a = options.prefixes, prefixes = _a === void 0 ? \"./\" : _a;\n    var defaultPattern = \"[^\" + escapeString(options.delimiter || \"/#?\") + \"]+?\";\n    var result = [];\n    var key = 0;\n    var i = 0;\n    var path = \"\";\n    var tryConsume = function (type) {\n        if (i < tokens.length && tokens[i].type === type)\n            return tokens[i++].value;\n    };\n    var mustConsume = function (type) {\n        var value = tryConsume(type);\n        if (value !== undefined)\n            return value;\n        var _a = tokens[i], nextType = _a.type, index = _a.index;\n        throw new TypeError(\"Unexpected \" + nextType + \" at \" + index + \", expected \" + type);\n    };\n    var consumeText = function () {\n        var result = \"\";\n        var value;\n        // tslint:disable-next-line\n        while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n            result += value;\n        }\n        return result;\n    };\n    while (i < tokens.length) {\n        var char = tryConsume(\"CHAR\");\n        var name = tryConsume(\"NAME\");\n        var pattern = tryConsume(\"PATTERN\");\n        if (name || pattern) {\n            var prefix = char || \"\";\n            if (prefixes.indexOf(prefix) === -1) {\n                path += prefix;\n                prefix = \"\";\n            }\n            if (path) {\n                result.push(path);\n                path = \"\";\n            }\n            result.push({\n                name: name || key++,\n                prefix: prefix,\n                suffix: \"\",\n                pattern: pattern || defaultPattern,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        var value = char || tryConsume(\"ESCAPED_CHAR\");\n        if (value) {\n            path += value;\n            continue;\n        }\n        if (path) {\n            result.push(path);\n            path = \"\";\n        }\n        var open = tryConsume(\"OPEN\");\n        if (open) {\n            var prefix = consumeText();\n            var name_1 = tryConsume(\"NAME\") || \"\";\n            var pattern_1 = tryConsume(\"PATTERN\") || \"\";\n            var suffix = consumeText();\n            mustConsume(\"CLOSE\");\n            result.push({\n                name: name_1 || (pattern_1 ? key++ : \"\"),\n                pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n                prefix: prefix,\n                suffix: suffix,\n                modifier: tryConsume(\"MODIFIER\") || \"\"\n            });\n            continue;\n        }\n        mustConsume(\"END\");\n    }\n    return result;\n}\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile(str, options) {\n    return tokensToFunction(parse(str, options), options);\n}\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction(tokens, options) {\n    if (options === void 0) { options = {}; }\n    var reFlags = flags(options);\n    var _a = options.encode, encode = _a === void 0 ? function (x) { return x; } : _a, _b = options.validate, validate = _b === void 0 ? true : _b;\n    // Compile all the tokens into regexps.\n    var matches = tokens.map(function (token) {\n        if (typeof token === \"object\") {\n            return new RegExp(\"^(?:\" + token.pattern + \")$\", reFlags);\n        }\n    });\n    return function (data) {\n        var path = \"\";\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (typeof token === \"string\") {\n                path += token;\n                continue;\n            }\n            var value = data ? data[token.name] : undefined;\n            var optional = token.modifier === \"?\" || token.modifier === \"*\";\n            var repeat = token.modifier === \"*\" || token.modifier === \"+\";\n            if (Array.isArray(value)) {\n                if (!repeat) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not repeat, but got an array\");\n                }\n                if (value.length === 0) {\n                    if (optional)\n                        continue;\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to not be empty\");\n                }\n                for (var j = 0; j < value.length; j++) {\n                    var segment = encode(value[j], token);\n                    if (validate && !matches[i].test(segment)) {\n                        throw new TypeError(\"Expected all \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                    }\n                    path += token.prefix + segment + token.suffix;\n                }\n                continue;\n            }\n            if (typeof value === \"string\" || typeof value === \"number\") {\n                var segment = encode(String(value), token);\n                if (validate && !matches[i].test(segment)) {\n                    throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to match \\\"\" + token.pattern + \"\\\", but got \\\"\" + segment + \"\\\"\");\n                }\n                path += token.prefix + segment + token.suffix;\n                continue;\n            }\n            if (optional)\n                continue;\n            var typeOfMessage = repeat ? \"an array\" : \"a string\";\n            throw new TypeError(\"Expected \\\"\" + token.name + \"\\\" to be \" + typeOfMessage);\n        }\n        return path;\n    };\n}\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match(str, options) {\n    var keys = [];\n    var re = pathToRegexp(str, keys, options);\n    return regexpToFunction(re, keys, options);\n}\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction(re, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.decode, decode = _a === void 0 ? function (x) { return x; } : _a;\n    return function (pathname) {\n        var m = re.exec(pathname);\n        if (!m)\n            return false;\n        var path = m[0], index = m.index;\n        var params = Object.create(null);\n        var _loop_1 = function (i) {\n            // tslint:disable-next-line\n            if (m[i] === undefined)\n                return \"continue\";\n            var key = keys[i - 1];\n            if (key.modifier === \"*\" || key.modifier === \"+\") {\n                params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n                    return decode(value, key);\n                });\n            }\n            else {\n                params[key.name] = decode(m[i], key);\n            }\n        };\n        for (var i = 1; i < m.length; i++) {\n            _loop_1(i);\n        }\n        return { path: path, index: index, params: params };\n    };\n}\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str) {\n    return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options) {\n    return options && options.sensitive ? \"\" : \"i\";\n}\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path, keys) {\n    if (!keys)\n        return path;\n    var groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n    var index = 0;\n    var execResult = groupsRegex.exec(path.source);\n    while (execResult) {\n        keys.push({\n            // Use parenthesized substring match if available, index otherwise\n            name: execResult[1] || index++,\n            prefix: \"\",\n            suffix: \"\",\n            modifier: \"\",\n            pattern: \"\"\n        });\n        execResult = groupsRegex.exec(path.source);\n    }\n    return path;\n}\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(paths, keys, options) {\n    var parts = paths.map(function (path) { return pathToRegexp(path, keys, options).source; });\n    return new RegExp(\"(?:\" + parts.join(\"|\") + \")\", flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(path, keys, options) {\n    return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(tokens, keys, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.strict, strict = _a === void 0 ? false : _a, _b = options.start, start = _b === void 0 ? true : _b, _c = options.end, end = _c === void 0 ? true : _c, _d = options.encode, encode = _d === void 0 ? function (x) { return x; } : _d;\n    var endsWith = \"[\" + escapeString(options.endsWith || \"\") + \"]|$\";\n    var delimiter = \"[\" + escapeString(options.delimiter || \"/#?\") + \"]\";\n    var route = start ? \"^\" : \"\";\n    // Iterate over the tokens and create our regexp string.\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        if (typeof token === \"string\") {\n            route += escapeString(encode(token));\n        }\n        else {\n            var prefix = escapeString(encode(token.prefix));\n            var suffix = escapeString(encode(token.suffix));\n            if (token.pattern) {\n                if (keys)\n                    keys.push(token);\n                if (prefix || suffix) {\n                    if (token.modifier === \"+\" || token.modifier === \"*\") {\n                        var mod = token.modifier === \"*\" ? \"?\" : \"\";\n                        route += \"(?:\" + prefix + \"((?:\" + token.pattern + \")(?:\" + suffix + prefix + \"(?:\" + token.pattern + \"))*)\" + suffix + \")\" + mod;\n                    }\n                    else {\n                        route += \"(?:\" + prefix + \"(\" + token.pattern + \")\" + suffix + \")\" + token.modifier;\n                    }\n                }\n                else {\n                    route += \"(\" + token.pattern + \")\" + token.modifier;\n                }\n            }\n            else {\n                route += \"(?:\" + prefix + suffix + \")\" + token.modifier;\n            }\n        }\n    }\n    if (end) {\n        if (!strict)\n            route += delimiter + \"?\";\n        route += !options.endsWith ? \"$\" : \"(?=\" + endsWith + \")\";\n    }\n    else {\n        var endToken = tokens[tokens.length - 1];\n        var isEndDelimited = typeof endToken === \"string\"\n            ? delimiter.indexOf(endToken[endToken.length - 1]) > -1\n            : // tslint:disable-next-line\n                endToken === undefined;\n        if (!strict) {\n            route += \"(?:\" + delimiter + \"(?=\" + endsWith + \"))?\";\n        }\n        if (!isEndDelimited) {\n            route += \"(?=\" + delimiter + \"|\" + endsWith + \")\";\n        }\n    }\n    return new RegExp(route, flags(options));\n}\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(path, keys, options) {\n    if (path instanceof RegExp)\n        return regexpToRegexp(path, keys);\n    if (Array.isArray(path))\n        return arrayToRegexp(path, keys, options);\n    return stringToRegexp(path, keys, options);\n}\n//# sourceMappingURL=index.js.map","class Dispatcher {\n  /**\n   * Create a dispatcher instance.\n   */\n  constructor() {\n    this._events = {}\n  }\n\n  /**\n   * Destroy instance.\n   */\n  destroy () {\n    this._events = null\n  }\n\n  /**\n   * Start listening to the named event.\n   * @param {String} name Event name.\n   * @param {Function} callback Callback function.\n   */\n  addListener (name, callback) {\n    // Check if event by name exists. If not add it.\n    if (!Object.prototype.hasOwnProperty.call(this._events, name)) {\n      this._events[name] = [\n        callback,\n      ]\n    } else {\n      // Check if callback in event. If not add it.\n      if (this._events[name].indexOf(callback) < 0) {\n        this._events[name].push(callback)\n      }\n    }\n\n    return true\n  }\n\n  /**\n   * Stop listening to the named event.\n   * @param {String} name Event name.\n   * @param {Function} callback Callback function.\n   */\n  removeListener (name, callback) {\n    // Check if event by name exists.\n    if (!Object.prototype.hasOwnProperty.call(this._events, name)) {\n      return\n    }\n    // Check if event has callbacks.\n    if (this._events[name].length <= 0) {\n      return\n    }\n\n    const index = this._events[name].indexOf(callback)\n    // Check if callback in event. If so remove it.\n    if (index >= 0) {\n      this._events[name].splice(index, 1)\n    }\n  }\n\n  /**\n   * Remove all listeners listening to the dispatcher or just the named events.\n   * @param {String} name Optional event name.\n   */\n  removeAllListeners (name = null) {\n    // Check if event by name exists.\n    if (name && !Object.prototype.hasOwnProperty.call(this._events, name)) {\n      return\n    }\n\n    // Reset event with specified name.\n    delete this._events[name]\n  }\n\n  /**\n   * Invokes the callback functions matching the event name.\n   * @param {String} name Event name.\n   * @param {Any} data Variables to give to the callback function.\n   */\n  dispatch (name, ...data) {\n    // Check if event by name exists.\n    if (!Object.prototype.hasOwnProperty.call(this._events, name)) {\n      return\n    }\n    // Check if event has callbacks.\n    if (this._events[name].length <= 0) {\n      return\n    }\n\n    // Execute callbacks.\n    this._events[name].forEach(callback => {\n      callback(...data) // eslint-disable-line\n    })\n  }\n}\n\nexport default Dispatcher\n","// Import external modules.\nimport { pathToRegexp } from 'path-to-regexp'\n// Import local modules.\nimport Dispatcher from './util/Dispatcher.js'\n\nclass Router extends Dispatcher {\n  constructor(options = null) {\n    super()\n\n    // Overwrite default with given options.\n    this._options = Object.assign({\n      basePath: '',\n      updateHistory: false,\n      pathToRegexp: {},\n    }, options)\n\n    this._pathCurrent = null\n    this._routes = {}\n    this._routeCurrent = null\n  }\n\n  destroy () {\n    this._options = null\n    this._pathCurrent = null\n    this._routeCurrent = null\n    this._routes = null\n\n    super.destroy()\n  }\n\n  getPath () {\n    return this._pathCurrent\n  }\n\n  addRoute (path, options = {}) {\n    // Create routes test function.\n    const regexp = pathToRegexp(path, [], options)\n    const test = (_path) => {\n      return regexp.test(_path)\n    }\n\n    // Add route to list.\n    this._routes[path] = test\n\n    // Dispatch add event.\n    this.dispatch('added', {\n      route: path,\n      router: this,\n    })\n  }\n\n  removeRoute (path) {\n    delete this._routes[path]\n  }\n\n  getRoutes () {\n    return Object.keys(this._routes)\n  }\n\n  push (path) {\n    // Remove base url, if present.\n    const pathNew = path.replace(this._options.basePath, '')\n    if (this._pathCurrent === pathNew) {\n      return true\n    }\n\n    // Find matching routes.\n    let routeNew = null\n    for (const routePath in this._routes) {\n      const match = this._routes[routePath]\n      if (!match(pathNew)) {\n        continue\n      }\n\n      routeNew = routePath\n      break\n    }\n\n    if (!routeNew) {\n      return false\n    }\n    this._pathCurrent = pathNew\n    this._routeCurrent = routeNew\n\n    // Update page history if options set and window global exists.\n    if (this._options.updateHistory && typeof window !== 'undefined') {\n      // Construct url.\n      const url = path.includes(this._options.basePath) ? path : this._options.basePath + path\n      // Check if url is not current url.\n      if (url !== window.history.location) {\n        // Add path to history.\n        window.history.pushState(null, window.document.title, url)\n      }\n    }\n\n    // Dispatch event on router.\n    this.dispatch('pushed', {\n      path: this._pathCurrent,\n      router: this,\n      route: this._routeCurrent,\n    })\n\n    return true\n  }\n}\n\nexport default Router\n","export const EACH = 0\nexport const IF = 1\nexport const SIMPLE = 2\nexport const TAG = 3\nexport const SLOT = 4\n\nexport default {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n}","/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nexport function camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase()\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\nexport function dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase())\n}","import {dashToCamelCase} from './strings'\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\nexport function DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value\n    return acc\n  }, {})\n}\n\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n\n// Ignore this helper because it's needed only for svg tags\nexport function moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild)\n    moveChildren(source, target)\n  }\n}\n\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\nexport function cleanNode(node) {\n  clearChildren(node.childNodes)\n}\n\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\nexport function clearChildren(children) {\n  Array.from(children).forEach(removeChild)\n}\n\n\n/**\n * Remove a node\n * @param {HTMLElement}node - node to remove\n * @returns {undefined}\n */\nexport const removeChild = node => node && node.parentNode && node.parentNode.removeChild(node)\n\n/**\n * Insert before a node\n * @param {HTMLElement} newNode - node to insert\n * @param {HTMLElement} refNode - ref child\n * @returns {undefined}\n */\nexport const insertBefore = (newNode, refNode) => refNode && refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode)\n\n/**\n * Replace a node\n * @param {HTMLElement} newNode - new node to add to the DOM\n * @param {HTMLElement} replaced - node to replace\n * @returns {undefined}\n */\nexport const replaceChild = (newNode, replaced) => replaced && replaced.parentNode && replaced.parentNode.replaceChild(newNode, replaced)\n","// Riot.js constants that can be used accross more modules\n\nexport const\n  COMPONENTS_IMPLEMENTATION_MAP = new Map(),\n  DOM_COMPONENT_INSTANCE_PROPERTY = Symbol('riot-component'),\n  PLUGINS_SET = new Set(),\n  IS_DIRECTIVE = 'is',\n  VALUE_ATTRIBUTE = 'value',\n  MOUNT_METHOD_KEY = 'mount',\n  UPDATE_METHOD_KEY = 'update',\n  UNMOUNT_METHOD_KEY = 'unmount',\n  SHOULD_UPDATE_KEY = 'shouldUpdate',\n  ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n  ON_MOUNTED_KEY = 'onMounted',\n  ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n  ON_UPDATED_KEY = 'onUpdated',\n  ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n  ON_UNMOUNTED_KEY = 'onUnmounted',\n  PROPS_KEY = 'props',\n  STATE_KEY = 'state',\n  SLOTS_KEY = 'slots',\n  ROOT_KEY = 'root',\n  IS_PURE_SYMBOL = Symbol('pure'),\n  IS_COMPONENT_UPDATING = Symbol('is_updating'),\n  PARENT_KEY_SYMBOL = Symbol('parent'),\n  ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n  TEMPLATE_KEY_SYMBOL = Symbol('template')\n","export const ATTRIBUTE = 0\nexport const EVENT = 1\nexport const TEXT = 2\nexport const VALUE = 3\n\nexport default {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n}","export const HEAD_SYMBOL = Symbol('head')\nexport const TAIL_SYMBOL = Symbol('tail')\n","import {HEAD_SYMBOL, TAIL_SYMBOL} from '../constants'\n\n\n/**\n * Create the <template> fragments text nodes\n * @return {Object} {{head: Text, tail: Text}}\n */\nexport default function createHeadTailPlaceholders() {\n  const head = document.createTextNode('')\n  const tail = document.createTextNode('')\n\n  head[HEAD_SYMBOL] = true\n  tail[TAIL_SYMBOL] = true\n\n  return {head, tail}\n}\n","import createHeadTailPlaceholders from './create-head-tail-placeholders'\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\nexport default function createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true)\n  const {head, tail} = createHeadTailPlaceholders()\n\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    head,\n    tail,\n    children: [head, ...Array.from(fragment.childNodes), tail]\n  }\n}\n","\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nexport function defineProperty(source, key, value, options = {}) {\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, {\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true,\n    ...options\n  })\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source\n}\n\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\nexport function defineProperties(source, properties, options) {\n  Object.entries(properties).forEach(([key, value]) => {\n    defineProperty(source, key, value, options)\n  })\n\n  return source\n}\n\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\nexport function defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach(([key, value]) => {\n    if (!source[key]) source[key] = value\n  })\n\n  return source\n}\n\n/**\n * Simple clone deep function, do not use it for classes or recursive objects!\n * @param   {*} source - possibily an object to clone\n * @returns {*} the object we wanted to clone\n */\nexport function cloneDeep(source) {\n  return JSON.parse(JSON.stringify(source))\n}\n","/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nexport function checkType(element, type) {\n  return typeof element === type\n}\n\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\nexport function isSvg(el) {\n  const owner = el.ownerSVGElement\n\n  return !!owner || owner === null\n}\n\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\nexport function isTemplate(el) {\n  return el.tagName.toLowerCase() === 'template'\n}\n\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\nexport function isFunction(value) {\n  return checkType(value, 'function')\n}\n\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\nexport function isBoolean(value) {\n  return checkType(value, 'boolean')\n}\n\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\nexport function isObject(value) {\n  return !isNil(value) && value.constructor === Object\n}\n\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\nexport function isNil(value) {\n  return value === null || value === undefined\n}\n\n/**\n * Detect node js environements\n * @returns {boolean} true if the runtime is node\n */\nexport function isNode() {\n  return typeof process !== 'undefined'\n}\n","import { insertBefore, removeChild, replaceChild } from '@riotjs/util/dom'\n/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n\n// fork of https://github.com/WebReflection/udomdiff version 1.1.0\n// due to https://github.com/WebReflection/udomdiff/pull/2\n/* eslint-disable */\n\n/**\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\nexport default (a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ?\n        (bStart ?\n          (get(b[bStart - 1], -0).nextSibling) :\n          get(b[bEnd - bStart], 0)) :\n        before;\n      while (bStart < bEnd)\n        insertBefore(get(b[bStart++], 1), node);\n    }\n    // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart]))\n          removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    }\n    // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    }\n    // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    }\n    // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (\n      a[aStart] === b[bEnd - 1] &&\n      b[bStart] === a[aEnd - 1]\n    ) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      insertBefore(\n        get(b[bStart++], 1),\n        get(a[aStart++], -1).nextSibling\n      );\n      insertBefore(get(b[--bEnd], 1), node);\n      // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n      a[aEnd] = b[bEnd];\n    }\n    // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map;\n        let i = bStart;\n        while (i < bEnd)\n          map.set(b[i], i++);\n      }\n      // if it's a future node, hence it needs some handling\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]);\n        // if it's not already processed, look on demand for the next LCS\n        if (bStart < index && index < bEnd) {\n          let i = aStart;\n          // counts the amount of nodes that are the same in the future\n          let sequence = 1;\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === (index + sequence))\n            sequence++;\n          // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n          if (sequence > (index - bStart)) {\n            const node = get(a[aStart], 0);\n            while (bStart < index)\n              insertBefore(get(b[bStart++], 1), node);\n          }\n          // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            replaceChild(\n              get(b[bStart++], 1),\n              get(a[aStart++], -1)\n            );\n          }\n        }\n        // otherwise move the source forward, 'cause there's nothing to do\n        else\n          aStart++;\n      }\n      // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else\n        removeChild(get(a[aStart++], -1));\n    }\n  }\n  return b;\n};\n","import {insertBefore, removeChild} from '@riotjs/util/dom'\nimport createTemplateMeta from '../util/create-template-meta'\nimport {defineProperty} from '@riotjs/util/objects'\nimport {isTemplate} from '@riotjs/util/checks'\nimport udomdiff from '../util/udomdiff'\n\nconst UNMOUNT_SCOPE = Symbol('unmount')\n\nexport const EachBinding = {\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const {placeholder, nodes, childrenMap} = this\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope)\n    const items = collection ? Array.from(collection) : []\n\n    // prepare the diffing\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this)\n\n    // patch the DOM only if there are new nodes\n    udomdiff(\n      nodes,\n      futureNodes,\n      patch(\n        Array.from(childrenMap.values()),\n        parentScope\n      ),\n      placeholder\n    )\n\n    // trigger the mounts and the updates\n    batches.forEach(fn => fn())\n\n    // update the children map\n    this.childrenMap = newChildrenMap\n    this.nodes = futureNodes\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope)\n\n    return this\n  }\n}\n\n/**\n * Patch the DOM while diffing\n * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      // get the last element added to the childrenMap saved previously\n      const element = redundant[redundant.length - 1]\n\n      if (element) {\n        // get the nodes and the template in stored in the last child of the childrenMap\n        const {template, nodes, context} = element\n        // remove the last node (notice <template> tags might have more children nodes)\n        nodes.pop()\n\n        // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n        if (!nodes.length) {\n          // we have cleared all the children nodes and we can unmount this template\n          redundant.pop()\n          template.unmount(context, parentScope, null)\n        }\n      }\n    }\n\n    return item\n  }\n}\n\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\nfunction mustFilterItem(condition, context) {\n  return condition ? !condition(context) : false\n}\n\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {Object} options - options\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\nfunction extendScope(scope, {itemName, indexName, index, item}) {\n  defineProperty(scope, itemName, item)\n  if (indexName) defineProperty(scope, indexName, index)\n\n  return scope\n}\n\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\nfunction createPatch(items, scope, parentScope, binding) {\n  const {condition, template, childrenMap, itemName, getKey, indexName, root, isTemplateTag} = binding\n  const newChildrenMap = new Map()\n  const batches = []\n  const futureNodes = []\n\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {itemName, indexName, index, item})\n    const key = getKey ? getKey(context) : index\n    const oldItem = childrenMap.get(key)\n    const nodes = []\n\n    if (mustFilterItem(condition, context)) {\n      return\n    }\n\n    const mustMount = !oldItem\n    const componentTemplate = oldItem ? oldItem.template : template.clone()\n    const el = componentTemplate.el || root.cloneNode()\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : componentTemplate.meta\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta))\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope))\n    }\n\n    // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n    if (isTemplateTag) {\n      nodes.push(...meta.children)\n    } else {\n      nodes.push(el)\n    }\n\n    // delete the old item from the children map\n    childrenMap.delete(key)\n    futureNodes.push(...nodes)\n\n    // update the children map\n    newChildrenMap.set(key, {\n      nodes,\n      template: componentTemplate,\n      context,\n      index\n    })\n  })\n\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  }\n}\n\nexport default function create(node, {evaluate, condition, itemName, indexName, getKey, template}) {\n  const placeholder = document.createTextNode('')\n  const root = node.cloneNode()\n\n  insertBefore(placeholder,  node)\n  removeChild(node)\n\n  return {\n    ...EachBinding,\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  }\n}\n","import {insertBefore, removeChild} from '@riotjs/util/dom'\n\n/**\n * Binding responsible for the `if` directive\n */\nexport const IfBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope)\n  },\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope)\n    const mustMount = !this.value && value\n    const mustUnmount = this.value && !value\n    const mount = () => {\n      const pristine = this.node.cloneNode()\n\n      insertBefore(pristine, this.placeholder)\n      this.template = this.template.clone()\n      this.template.mount(pristine, scope, parentScope)\n    }\n\n    switch (true) {\n    case mustMount:\n      mount()\n      break\n    case mustUnmount:\n      this.unmount(scope)\n      break\n    default:\n      if (value) this.template.update(scope, parentScope)\n    }\n\n    this.value = value\n\n    return this\n  },\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true)\n\n    return this\n  }\n}\n\nexport default function create(node, { evaluate, template }) {\n  const placeholder = document.createTextNode('')\n\n  insertBefore(placeholder, node)\n  removeChild(node)\n\n  return {\n    ...IfBinding,\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node)\n  }\n}\n","import {ATTRIBUTE, VALUE} from './expression-types'\nimport {dashToCamelCase} from './strings'\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\nexport function panic(message) {\n  throw new Error(message)\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\nexport function memoize(fn) {\n  const cache = new Map()\n  const cached = val => {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val)\n  }\n  cached.cache = cache\n  return cached\n}\n\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\nexport function evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {value, type} = attribute\n\n    switch (true) {\n    // spread attribute\n    case !attribute.name && type === ATTRIBUTE:\n      return {\n        ...acc,\n        ...value\n      }\n    // value attribute\n    case type === VALUE:\n      acc.value = attribute.value\n      break\n    // normal attributes\n    default:\n      acc[dashToCamelCase(attribute.name)] = attribute.value\n    }\n\n    return acc\n  }, {})\n}","import {isBoolean, isFunction, isObject} from '@riotjs/util/checks'\nimport {memoize} from '@riotjs/util/misc'\n\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype\nconst isNativeHtmlProperty = memoize(name => ElementProto.hasOwnProperty(name) ) // eslint-disable-line\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\nfunction setAllAttributes(node, attributes) {\n  Object\n    .entries(attributes)\n    .forEach(([name, value]) => attributeExpression(node, { name }, value))\n}\n\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : []\n\n  Object\n    .keys(oldAttributes)\n    .filter(name => !newKeys.includes(name))\n    .forEach(attribute => node.removeAttribute(attribute))\n}\n\n/**\n * Check whether the attribute value can be rendered\n * @param {*} value - expression value\n * @returns {boolean} true if we can render this attribute value\n */\nfunction canRenderAttribute(value) {\n  return value === true || ['string', 'number'].includes(typeof value)\n}\n\n/**\n * Check whether the attribute should be removed\n * @param {*} value - expression value\n * @returns {boolean} boolean - true if the attribute can be removed}\n */\nfunction shouldRemoveAttribute(value) {\n  return !value && value !== 0\n}\n\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\nexport default function attributeExpression(node, { name }, value, oldValue) {\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue)\n    }\n\n    // is the value still truthy?\n    if (value) {\n      setAllAttributes(node, value)\n    }\n\n    return\n  }\n\n  // handle boolean attributes\n  if (\n    !isNativeHtmlProperty(name) && (\n      isBoolean(value) ||\n      isObject(value) ||\n      isFunction(value)\n    )\n  ) {\n    node[name] = value\n  }\n\n  if (shouldRemoveAttribute(value)) {\n    node.removeAttribute(name)\n  } else if (canRenderAttribute(value)) {\n    node.setAttribute(name, normalizeValue(name, value))\n  }\n}\n\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  return (value === true) ? name : value\n}\n","const RE_EVENTS_PREFIX = /^on/\n\nconst getCallbackAndOptions = value => Array.isArray(value) ? value : [value, false]\n\n// see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event)\n  }\n}\nconst ListenersWeakMap = new WeakMap()\n\nconst createListener = node => {\n  const listener = Object.create(EventListener)\n  ListenersWeakMap.set(node, listener)\n  return listener\n}\n\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\nexport default function eventExpression(node, { name }, value) {\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '')\n  const eventListener = ListenersWeakMap.get(node) || createListener(node)\n  const [callback, options] = getCallbackAndOptions(value)\n  const handler = eventListener[normalizedEventName]\n  const mustRemoveEvent = handler && !callback\n  const mustAddEvent = callback && !handler\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener)\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options)\n  }\n\n  eventListener[normalizedEventName] = callback\n}","import {isNil} from '@riotjs/util/checks'\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\nexport default function normalizeStringValue(value) {\n  return isNil(value) ? '' : value\n}","import normalizeStringValue from '../util/normalize-string-value'\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {Text} the text node to update\n */\nexport const getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex]\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('')\n    node.replaceChild(textNode, target)\n\n    return textNode\n  }\n\n  return target\n}\n\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nexport default function textExpression(node, data, value) {\n  node.data = normalizeStringValue(value)\n}\n","import normalizeStringValue from '../util/normalize-string-value'\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\nexport default function valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value)\n}","import {ATTRIBUTE, EVENT, TEXT, VALUE} from '@riotjs/util/expression-types'\nimport attributeExpression from './attribute'\nimport eventExpression from './event'\nimport textExpression from './text'\nimport valueExpression from './value'\n\nexport default {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n}","\nimport {EVENT, TEXT} from '@riotjs/util/expression-types'\nimport expressions from './expressions'\nimport {getTextNode} from './expressions/text'\n\nexport const Expression = {\n  // Static props\n  // node: null,\n  // value: null,\n\n  // API methods\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope)\n\n    // IO() DOM updates\n    apply(this, this.value)\n\n    return this\n  },\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope)\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value)\n      this.value = value\n    }\n\n    return this\n  },\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null)\n\n    return this\n  }\n}\n\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value)\n}\n\nexport default function create(node, data) {\n  return {\n    ...Expression,\n    ...data,\n    node: data.type === TEXT ?\n      getTextNode(node, data.childNodeIndex) :\n      node\n  }\n}\n","/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nexport default function flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return {\n      ...acc,\n      [method]: (scope) => {\n        return collection.map(item => item[method](scope)) && context\n      }\n    }\n  }, {})\n}","import createExpression from '../expression'\nimport flattenCollectionMethods from '../util/flatten-collection-methods'\n\nexport default function create(node, { expressions }) {\n  return {\n    ...flattenCollectionMethods(\n      expressions.map(expression => createExpression(node, expression)),\n      ['mount', 'update', 'unmount']\n    )\n  }\n}\n","import {cleanNode, insertBefore, removeChild} from '@riotjs/util/dom'\nimport {PARENT_KEY_SYMBOL} from '@riotjs/util/constants'\nimport {evaluateAttributeExpressions} from '@riotjs/util/misc'\nimport template from '../template'\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope\n\n  const expressions = attributes.map(attr => ({\n    ...attr,\n    value: attr.evaluate(scope)\n  }))\n\n  return Object.assign(\n    Object.create(parentScope || null),\n    evaluateAttributeExpressions(expressions)\n  )\n}\n\n// this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\nconst getRealParent = (scope, parentScope) => scope[PARENT_KEY_SYMBOL] || parentScope\n\nexport const SlotBinding = {\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n  // template: null,\n\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope)\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find(({id}) => id === this.name) : false\n    const {parentNode} = this.node\n    const realParent = getRealParent(scope, parentScope)\n\n    this.template = templateData && template(\n      templateData.html,\n      templateData.bindings\n    ).createDOM(parentNode)\n\n    if (this.template) {\n      cleanNode(this.node)\n      this.template.mount(this.node, this.getTemplateScope(scope, realParent), realParent)\n      this.template.children = Array.from(this.node.childNodes)\n    }\n\n    moveSlotInnerContent(this.node)\n    removeChild(this.node)\n\n    return this\n  },\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = getRealParent(scope, parentScope)\n      this.template.update(this.getTemplateScope(scope, realParent), realParent)\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot)\n    }\n\n    return this\n  }\n}\n\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLElement} slot - slot node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\nfunction moveSlotInnerContent(slot) {\n  const child = slot && slot.firstChild\n\n  if (!child) return\n\n  insertBefore(child, slot)\n  moveSlotInnerContent(slot)\n}\n\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} name - slot id\n * @param   {AttributeExpressionData[]} attributes - slot attributes\n * @returns {Object} Slot binding object\n */\nexport default function createSlot(node, { name, attributes }) {\n  return {\n    ...SlotBinding,\n    attributes,\n    node,\n    name\n  }\n}\n","import {ATTRIBUTE} from '@riotjs/util/expression-types'\nimport template from '../template'\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\nfunction getTag(component, slots = [], attributes = []) {\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({slots, attributes})\n  }\n\n  // otherwise we return a template chunk\n  return template(slotsToMarkup(slots), [\n    ...slotBindings(slots), {\n      // the attributes should be registered as binding\n      // if we fallback to a normal template chunk\n      expressions: attributes.map(attr => {\n        return {\n          type: ATTRIBUTE,\n          ...attr\n        }\n      })\n    }\n  ])\n}\n\n\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\nfunction slotBindings(slots) {\n  return slots.reduce((acc, {bindings}) => acc.concat(bindings), [])\n}\n\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html\n  }, '')\n}\n\n\nexport const TagBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n\n  mount(scope) {\n    return this.update(scope)\n  },\n  update(scope, parentScope) {\n    const name = this.evaluate(scope)\n\n    // simple update\n    if (name && name === this.name) {\n      this.tag.update(scope)\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true)\n\n      // mount the new tag\n      this.name = name\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes)\n      this.tag.mount(this.node, scope)\n    }\n\n    return this\n  },\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag)\n    }\n\n    return this\n  }\n}\n\nexport default function create(node, {evaluate, getComponent, slots, attributes}) {\n  return {\n    ...TagBinding,\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  }\n}\n","import {EACH, IF, SIMPLE, SLOT, TAG} from '@riotjs/util/binding-types'\nimport EachBinding from './each'\nimport IfBinding from './if'\nimport SimpleBinding from './simple'\nimport SlotBinding from './slot'\nimport TagBinding from './tag'\n\nexport default {\n  [IF]: IfBinding,\n  [SIMPLE]: SimpleBinding,\n  [EACH]: EachBinding,\n  [TAG]: TagBinding,\n  [SLOT]: SlotBinding\n}","import {SIMPLE} from '@riotjs/util/binding-types'\nimport {TEXT} from '@riotjs/util/expression-types'\nimport bindings from './bindings'\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? {\n    ...e,\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  } : e)\n}\n\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {TagBindingData} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\nexport default function create(root, binding, templateTagOffset) {\n  const { selector, type, redundantAttribute, expressions } = binding\n  // find the node to apply the bindings\n  const node = selector ? root.querySelector(selector) : root\n\n  // remove eventually additional attributes created only to select this node\n  if (redundantAttribute) node.removeAttribute(redundantAttribute)\n  const bindingExpressions = expressions || []\n\n  // init the binding\n  return (bindings[type] || bindings[SIMPLE])(\n    node,\n    {\n      ...binding,\n      expressions: templateTagOffset && !selector ?\n        fixTextExpressionsOffset(bindingExpressions, templateTagOffset) :\n        bindingExpressions\n    }\n  )\n}\n","import {isSvg, isTemplate} from '@riotjs/util/checks'\n\n// in this case a simple innerHTML is enough\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template')\n  template.innerHTML = html\n  return template.content\n}\n\n// for svg nodes we need a bit more work\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(\n    new window.DOMParser()\n      .parseFromString(\n        `<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`,\n        'application/xml'\n      )\n      .documentElement,\n    true\n  )\n\n  return svgNode\n}\n\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\nexport default function createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root)\n\n  return createHTMLTree(html, root)\n}\n\n","import {isSvg, isTemplate} from '@riotjs/util/checks'\nimport {moveChildren} from '@riotjs/util/dom'\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\nexport default function injectDOM(el, dom) {\n  switch (true) {\n  case isSvg(el):\n    moveChildren(dom, el)\n    break\n  case isTemplate(el):\n    el.parentNode.replaceChild(dom, el)\n    break\n  default:\n    el.appendChild(dom)\n  }\n}\n","import {cleanNode, clearChildren, removeChild} from '@riotjs/util/dom'\nimport {IS_PURE_SYMBOL} from '@riotjs/util/constants'\nimport createBinding from './binding'\nimport createDOMTree from './util/create-DOM-tree'\nimport injectDOM from './util/inject-DOM'\nimport {isTemplate} from '@riotjs/util/checks'\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n * @returns {?DocumentFragment} fragment that will be injected into the root node\n */\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ?\n    createDOMTree(el, html) :\n    html)\n}\n\n/**\n * Get the offset of the <template> tag\n * @param {HTMLElement} parentNode - template tag parent node\n * @param {HTMLElement} el - the template tag we want to render\n * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n */\nfunction getTemplateTagOffset(parentNode, el, meta) {\n  const siblings = Array.from(parentNode.childNodes)\n\n  return Math.max(\n    siblings.indexOf(el),\n    siblings.indexOf(meta.head) + 1,\n    0\n  )\n}\n\n/**\n * Template Chunk model\n * @type {Object}\n */\nexport const TemplateChunk = Object.freeze({\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html) || document.createDocumentFragment()\n\n    return this\n  },\n\n  // API methods\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta = {}) {\n    if (!el) throw new Error('Please provide DOM node to mount properly your template')\n\n    if (this.el) this.unmount(scope)\n\n    // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n    const {fragment, children, avoidDOMInjection} = meta\n    // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n    const {parentNode} = children ? children[0] : el\n    const isTemplateTag = isTemplate(el)\n    const templateTagOffset = isTemplateTag ? getTemplateTagOffset(parentNode, el, meta) : null\n\n    // create the DOM if it wasn't created before\n    this.createDOM(el)\n\n    // create the DOM of this template cloning the original DOM structure stored in this instance\n    // notice that if a documentFragment was passed (via meta) we will use it instead\n    const cloneNode = fragment || this.dom.cloneNode(true)\n\n    // store root node\n    // notice that for template tags the root note will be the parent tag\n    this.el = isTemplateTag ? parentNode : el\n\n    // create the children array only for the <template> fragments\n    this.children = isTemplateTag ? children || Array.from(cloneNode.childNodes) : null\n\n    // inject the DOM into the el only if a fragment is available\n    if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode)\n\n    // create the bindings\n    this.bindings = this.bindingsData.map(binding => createBinding(\n      this.el,\n      binding,\n      templateTagOffset\n    ))\n    this.bindings.forEach(b => b.mount(scope, parentScope))\n\n    // store the template meta properties\n    this.meta = meta\n\n    return this\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope))\n\n    return this\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot = false) {\n    const el = this.el\n\n    if (!el) {\n      return this\n    }\n\n    this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot))\n\n    switch (true) {\n    // pure components should handle the DOM unmount updates by themselves\n    // for mustRemoveRoot === null don't touch the DOM\n    case (el[IS_PURE_SYMBOL] || mustRemoveRoot === null):\n      break\n\n    // if children are declared, clear them\n    // applicable for <template> and <slot/> bindings\n    case Array.isArray(this.children):\n      clearChildren(this.children)\n      break\n\n    // clean the node children only\n    case !mustRemoveRoot:\n      cleanNode(el)\n      break\n\n    // remove the root node only if the mustRemoveRoot is truly\n    case !!mustRemoveRoot:\n      removeChild(el)\n      break\n    }\n\n    this.el = null\n\n    return this\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return {\n      ...this,\n      meta: {},\n      el: null\n    }\n  }\n})\n\n\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {BindingData[]} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\nexport default function create(html, bindings = []) {\n  return {\n    ...TemplateChunk,\n    html,\n    bindingsData: bindings\n  }\n}\n","/* Riot v6.1.2, @license MIT */\n/**\n * Convert a string from camel case to dash-case\n * @param   {string} string - probably a component tag name\n * @returns {string} component name normalized\n */\nfunction camelToDashCase(string) {\n  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\n * Convert a string containing dashes to camel case\n * @param   {string} string - input string\n * @returns {string} my-string -> myString\n */\n\nfunction dashToCamelCase(string) {\n  return string.replace(/-(\\w)/g, (_, c) => c.toUpperCase());\n}\n\n/**\n * Get all the element attributes as object\n * @param   {HTMLElement} element - DOM node we want to parse\n * @returns {Object} all the attributes found as a key value pairs\n */\n\nfunction DOMattributesToObject(element) {\n  return Array.from(element.attributes).reduce((acc, attribute) => {\n    acc[dashToCamelCase(attribute.name)] = attribute.value;\n    return acc;\n  }, {});\n}\n/**\n * Move all the child nodes from a source tag to another\n * @param   {HTMLElement} source - source node\n * @param   {HTMLElement} target - target node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n// Ignore this helper because it's needed only for svg tags\n\nfunction moveChildren(source, target) {\n  if (source.firstChild) {\n    target.appendChild(source.firstChild);\n    moveChildren(source, target);\n  }\n}\n/**\n * Remove the child nodes from any DOM node\n * @param   {HTMLElement} node - target node\n * @returns {undefined}\n */\n\nfunction cleanNode(node) {\n  clearChildren(node.childNodes);\n}\n/**\n * Clear multiple children in a node\n * @param   {HTMLElement[]} children - direct children nodes\n * @returns {undefined}\n */\n\nfunction clearChildren(children) {\n  Array.from(children).forEach(removeChild);\n}\n/**\n * Remove a node\n * @param {HTMLElement}node - node to remove\n * @returns {undefined}\n */\n\nconst removeChild = node => node && node.parentNode && node.parentNode.removeChild(node);\n/**\n * Insert before a node\n * @param {HTMLElement} newNode - node to insert\n * @param {HTMLElement} refNode - ref child\n * @returns {undefined}\n */\n\nconst insertBefore = (newNode, refNode) => refNode && refNode.parentNode && refNode.parentNode.insertBefore(newNode, refNode);\n/**\n * Replace a node\n * @param {HTMLElement} newNode - new node to add to the DOM\n * @param {HTMLElement} replaced - node to replace\n * @returns {undefined}\n */\n\nconst replaceChild = (newNode, replaced) => replaced && replaced.parentNode && replaced.parentNode.replaceChild(newNode, replaced);\n\n// Riot.js constants that can be used accross more modules\nconst COMPONENTS_IMPLEMENTATION_MAP$1 = new Map(),\n      DOM_COMPONENT_INSTANCE_PROPERTY$1 = Symbol('riot-component'),\n      PLUGINS_SET$1 = new Set(),\n      IS_DIRECTIVE = 'is',\n      VALUE_ATTRIBUTE = 'value',\n      MOUNT_METHOD_KEY = 'mount',\n      UPDATE_METHOD_KEY = 'update',\n      UNMOUNT_METHOD_KEY = 'unmount',\n      SHOULD_UPDATE_KEY = 'shouldUpdate',\n      ON_BEFORE_MOUNT_KEY = 'onBeforeMount',\n      ON_MOUNTED_KEY = 'onMounted',\n      ON_BEFORE_UPDATE_KEY = 'onBeforeUpdate',\n      ON_UPDATED_KEY = 'onUpdated',\n      ON_BEFORE_UNMOUNT_KEY = 'onBeforeUnmount',\n      ON_UNMOUNTED_KEY = 'onUnmounted',\n      PROPS_KEY = 'props',\n      STATE_KEY = 'state',\n      SLOTS_KEY = 'slots',\n      ROOT_KEY = 'root',\n      IS_PURE_SYMBOL = Symbol('pure'),\n      IS_COMPONENT_UPDATING = Symbol('is_updating'),\n      PARENT_KEY_SYMBOL = Symbol('parent'),\n      ATTRIBUTES_KEY_SYMBOL = Symbol('attributes'),\n      TEMPLATE_KEY_SYMBOL = Symbol('template');\n\nvar globals = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  COMPONENTS_IMPLEMENTATION_MAP: COMPONENTS_IMPLEMENTATION_MAP$1,\n  DOM_COMPONENT_INSTANCE_PROPERTY: DOM_COMPONENT_INSTANCE_PROPERTY$1,\n  PLUGINS_SET: PLUGINS_SET$1,\n  IS_DIRECTIVE: IS_DIRECTIVE,\n  VALUE_ATTRIBUTE: VALUE_ATTRIBUTE,\n  MOUNT_METHOD_KEY: MOUNT_METHOD_KEY,\n  UPDATE_METHOD_KEY: UPDATE_METHOD_KEY,\n  UNMOUNT_METHOD_KEY: UNMOUNT_METHOD_KEY,\n  SHOULD_UPDATE_KEY: SHOULD_UPDATE_KEY,\n  ON_BEFORE_MOUNT_KEY: ON_BEFORE_MOUNT_KEY,\n  ON_MOUNTED_KEY: ON_MOUNTED_KEY,\n  ON_BEFORE_UPDATE_KEY: ON_BEFORE_UPDATE_KEY,\n  ON_UPDATED_KEY: ON_UPDATED_KEY,\n  ON_BEFORE_UNMOUNT_KEY: ON_BEFORE_UNMOUNT_KEY,\n  ON_UNMOUNTED_KEY: ON_UNMOUNTED_KEY,\n  PROPS_KEY: PROPS_KEY,\n  STATE_KEY: STATE_KEY,\n  SLOTS_KEY: SLOTS_KEY,\n  ROOT_KEY: ROOT_KEY,\n  IS_PURE_SYMBOL: IS_PURE_SYMBOL,\n  IS_COMPONENT_UPDATING: IS_COMPONENT_UPDATING,\n  PARENT_KEY_SYMBOL: PARENT_KEY_SYMBOL,\n  ATTRIBUTES_KEY_SYMBOL: ATTRIBUTES_KEY_SYMBOL,\n  TEMPLATE_KEY_SYMBOL: TEMPLATE_KEY_SYMBOL\n});\n\nconst EACH = 0;\nconst IF = 1;\nconst SIMPLE = 2;\nconst TAG = 3;\nconst SLOT = 4;\nvar bindingTypes = {\n  EACH,\n  IF,\n  SIMPLE,\n  TAG,\n  SLOT\n};\n\nconst ATTRIBUTE = 0;\nconst EVENT = 1;\nconst TEXT = 2;\nconst VALUE = 3;\nvar expressionTypes = {\n  ATTRIBUTE,\n  EVENT,\n  TEXT,\n  VALUE\n};\n\nconst HEAD_SYMBOL = Symbol('head');\nconst TAIL_SYMBOL = Symbol('tail');\n\n/**\n * Create the <template> fragments text nodes\n * @return {Object} {{head: Text, tail: Text}}\n */\n\nfunction createHeadTailPlaceholders() {\n  const head = document.createTextNode('');\n  const tail = document.createTextNode('');\n  head[HEAD_SYMBOL] = true;\n  tail[TAIL_SYMBOL] = true;\n  return {\n    head,\n    tail\n  };\n}\n\n/**\n * Create the template meta object in case of <template> fragments\n * @param   {TemplateChunk} componentTemplate - template chunk object\n * @returns {Object} the meta property that will be passed to the mount function of the TemplateChunk\n */\n\nfunction createTemplateMeta(componentTemplate) {\n  const fragment = componentTemplate.dom.cloneNode(true);\n  const {\n    head,\n    tail\n  } = createHeadTailPlaceholders();\n  return {\n    avoidDOMInjection: true,\n    fragment,\n    head,\n    tail,\n    children: [head, ...Array.from(fragment.childNodes), tail]\n  };\n}\n\n/**\n * Helper function to set an immutable property\n * @param   {Object} source - object where the new property will be set\n * @param   {string} key - object key where the new property will be stored\n * @param   {*} value - value of the new property\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} - the original object modified\n */\nfunction defineProperty(source, key, value, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  /* eslint-disable fp/no-mutating-methods */\n  Object.defineProperty(source, key, Object.assign({\n    value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options));\n  /* eslint-enable fp/no-mutating-methods */\n\n  return source;\n}\n/**\n * Define multiple properties on a target object\n * @param   {Object} source - object where the new properties will be set\n * @param   {Object} properties - object containing as key pair the key + value properties\n * @param   {Object} options - set the propery overriding the default options\n * @returns {Object} the original object modified\n */\n\nfunction defineProperties(source, properties, options) {\n  Object.entries(properties).forEach(_ref => {\n    let [key, value] = _ref;\n    defineProperty(source, key, value, options);\n  });\n  return source;\n}\n/**\n * Define default properties if they don't exist on the source object\n * @param   {Object} source - object that will receive the default properties\n * @param   {Object} defaults - object containing additional optional keys\n * @returns {Object} the original object received enhanced\n */\n\nfunction defineDefaults(source, defaults) {\n  Object.entries(defaults).forEach(_ref2 => {\n    let [key, value] = _ref2;\n    if (!source[key]) source[key] = value;\n  });\n  return source;\n}\n\n/**\n * Quick type checking\n * @param   {*} element - anything\n * @param   {string} type - type definition\n * @returns {boolean} true if the type corresponds\n */\nfunction checkType(element, type) {\n  return typeof element === type;\n}\n/**\n * Check if an element is part of an svg\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if we are in an svg context\n */\n\nfunction isSvg(el) {\n  const owner = el.ownerSVGElement;\n  return !!owner || owner === null;\n}\n/**\n * Check if an element is a template tag\n * @param   {HTMLElement}  el - element to check\n * @returns {boolean} true if it's a <template>\n */\n\nfunction isTemplate(el) {\n  return el.tagName.toLowerCase() === 'template';\n}\n/**\n * Check that will be passed if its argument is a function\n * @param   {*} value - value to check\n * @returns {boolean} - true if the value is a function\n */\n\nfunction isFunction(value) {\n  return checkType(value, 'function');\n}\n/**\n * Check if a value is a Boolean\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is a boolean\n */\n\nfunction isBoolean(value) {\n  return checkType(value, 'boolean');\n}\n/**\n * Check if a value is an Object\n * @param   {*}  value - anything\n * @returns {boolean} true only for the value is an object\n */\n\nfunction isObject(value) {\n  return !isNil(value) && value.constructor === Object;\n}\n/**\n * Check if a value is null or undefined\n * @param   {*}  value - anything\n * @returns {boolean} true only for the 'undefined' and 'null' types\n */\n\nfunction isNil(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * ISC License\n *\n * Copyright (c) 2020, Andrea Giammarchi, @WebReflection\n *\n * Permission to use, copy, modify, and/or distribute this software for any\n * purpose with or without fee is hereby granted, provided that the above\n * copyright notice and this permission notice appear in all copies.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n * REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n * AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n * LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE\n * OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n * PERFORMANCE OF THIS SOFTWARE.\n */\n// fork of https://github.com/WebReflection/udomdiff version 1.1.0\n// due to https://github.com/WebReflection/udomdiff/pull/2\n\n/* eslint-disable */\n\n/**\n * @param {Node[]} a The list of current/live children\n * @param {Node[]} b The list of future children\n * @param {(entry: Node, action: number) => Node} get\n * The callback invoked per each entry related DOM operation.\n * @param {Node} [before] The optional node used as anchor to insert before.\n * @returns {Node[]} The same list of future children.\n */\n\nvar udomdiff = ((a, b, get, before) => {\n  const bLength = b.length;\n  let aEnd = a.length;\n  let bEnd = bLength;\n  let aStart = 0;\n  let bStart = 0;\n  let map = null;\n\n  while (aStart < aEnd || bStart < bEnd) {\n    // append head, tail, or nodes in between: fast path\n    if (aEnd === aStart) {\n      // we could be in a situation where the rest of nodes that\n      // need to be added are not at the end, and in such case\n      // the node to `insertBefore`, if the index is more than 0\n      // must be retrieved, otherwise it's gonna be the first item.\n      const node = bEnd < bLength ? bStart ? get(b[bStart - 1], -0).nextSibling : get(b[bEnd - bStart], 0) : before;\n\n      while (bStart < bEnd) insertBefore(get(b[bStart++], 1), node);\n    } // remove head or tail: fast path\n    else if (bEnd === bStart) {\n      while (aStart < aEnd) {\n        // remove the node only if it's unknown or not live\n        if (!map || !map.has(a[aStart])) removeChild(get(a[aStart], -1));\n        aStart++;\n      }\n    } // same node: fast path\n    else if (a[aStart] === b[bStart]) {\n      aStart++;\n      bStart++;\n    } // same tail: fast path\n    else if (a[aEnd - 1] === b[bEnd - 1]) {\n      aEnd--;\n      bEnd--;\n    } // The once here single last swap \"fast path\" has been removed in v1.1.0\n    // https://github.com/WebReflection/udomdiff/blob/single-final-swap/esm/index.js#L69-L85\n    // reverse swap: also fast path\n    else if (a[aStart] === b[bEnd - 1] && b[bStart] === a[aEnd - 1]) {\n      // this is a \"shrink\" operation that could happen in these cases:\n      // [1, 2, 3, 4, 5]\n      // [1, 4, 3, 2, 5]\n      // or asymmetric too\n      // [1, 2, 3, 4, 5]\n      // [1, 2, 3, 5, 6, 4]\n      const node = get(a[--aEnd], -1).nextSibling;\n      insertBefore(get(b[bStart++], 1), get(a[aStart++], -1).nextSibling);\n      insertBefore(get(b[--bEnd], 1), node); // mark the future index as identical (yeah, it's dirty, but cheap 👍)\n      // The main reason to do this, is that when a[aEnd] will be reached,\n      // the loop will likely be on the fast path, as identical to b[bEnd].\n      // In the best case scenario, the next loop will skip the tail,\n      // but in the worst one, this node will be considered as already\n      // processed, bailing out pretty quickly from the map index check\n\n      a[aEnd] = b[bEnd];\n    } // map based fallback, \"slow\" path\n    else {\n      // the map requires an O(bEnd - bStart) operation once\n      // to store all future nodes indexes for later purposes.\n      // In the worst case scenario, this is a full O(N) cost,\n      // and such scenario happens at least when all nodes are different,\n      // but also if both first and last items of the lists are different\n      if (!map) {\n        map = new Map();\n        let i = bStart;\n\n        while (i < bEnd) map.set(b[i], i++);\n      } // if it's a future node, hence it needs some handling\n\n\n      if (map.has(a[aStart])) {\n        // grab the index of such node, 'cause it might have been processed\n        const index = map.get(a[aStart]); // if it's not already processed, look on demand for the next LCS\n\n        if (bStart < index && index < bEnd) {\n          let i = aStart; // counts the amount of nodes that are the same in the future\n\n          let sequence = 1;\n\n          while (++i < aEnd && i < bEnd && map.get(a[i]) === index + sequence) sequence++; // effort decision here: if the sequence is longer than replaces\n          // needed to reach such sequence, which would brings again this loop\n          // to the fast path, prepend the difference before a sequence,\n          // and move only the future list index forward, so that aStart\n          // and bStart will be aligned again, hence on the fast path.\n          // An example considering aStart and bStart are both 0:\n          // a: [1, 2, 3, 4]\n          // b: [7, 1, 2, 3, 6]\n          // this would place 7 before 1 and, from that time on, 1, 2, and 3\n          // will be processed at zero cost\n\n\n          if (sequence > index - bStart) {\n            const node = get(a[aStart], 0);\n\n            while (bStart < index) insertBefore(get(b[bStart++], 1), node);\n          } // if the effort wasn't good enough, fallback to a replace,\n          // moving both source and target indexes forward, hoping that some\n          // similar node will be found later on, to go back to the fast path\n          else {\n            replaceChild(get(b[bStart++], 1), get(a[aStart++], -1));\n          }\n        } // otherwise move the source forward, 'cause there's nothing to do\n        else aStart++;\n      } // this node has no meaning in the future list, so it's more than safe\n      // to remove it, and check the next live node out instead, meaning\n      // that only the live list index should be forwarded\n      else removeChild(get(a[aStart++], -1));\n    }\n  }\n\n  return b;\n});\n\nconst UNMOUNT_SCOPE = Symbol('unmount');\nconst EachBinding = {\n  // dynamic binding properties\n  // childrenMap: null,\n  // node: null,\n  // root: null,\n  // condition: null,\n  // evaluate: null,\n  // template: null,\n  // isTemplateTag: false,\n  nodes: [],\n\n  // getKey: null,\n  // indexName: null,\n  // itemName: null,\n  // afterPlaceholder: null,\n  // placeholder: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const {\n      placeholder,\n      nodes,\n      childrenMap\n    } = this;\n    const collection = scope === UNMOUNT_SCOPE ? null : this.evaluate(scope);\n    const items = collection ? Array.from(collection) : []; // prepare the diffing\n\n    const {\n      newChildrenMap,\n      batches,\n      futureNodes\n    } = createPatch(items, scope, parentScope, this); // patch the DOM only if there are new nodes\n\n    udomdiff(nodes, futureNodes, patch(Array.from(childrenMap.values()), parentScope), placeholder); // trigger the mounts and the updates\n\n    batches.forEach(fn => fn()); // update the children map\n\n    this.childrenMap = newChildrenMap;\n    this.nodes = futureNodes;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.update(UNMOUNT_SCOPE, parentScope);\n    return this;\n  }\n\n};\n/**\n * Patch the DOM while diffing\n * @param   {any[]} redundant - list of all the children (template, nodes, context) added via each\n * @param   {*} parentScope - scope of the parent template\n * @returns {Function} patch function used by domdiff\n */\n\nfunction patch(redundant, parentScope) {\n  return (item, info) => {\n    if (info < 0) {\n      // get the last element added to the childrenMap saved previously\n      const element = redundant[redundant.length - 1];\n\n      if (element) {\n        // get the nodes and the template in stored in the last child of the childrenMap\n        const {\n          template,\n          nodes,\n          context\n        } = element; // remove the last node (notice <template> tags might have more children nodes)\n\n        nodes.pop(); // notice that we pass null as last argument because\n        // the root node and its children will be removed by domdiff\n\n        if (!nodes.length) {\n          // we have cleared all the children nodes and we can unmount this template\n          redundant.pop();\n          template.unmount(context, parentScope, null);\n        }\n      }\n    }\n\n    return item;\n  };\n}\n/**\n * Check whether a template must be filtered from a loop\n * @param   {Function} condition - filter function\n * @param   {Object} context - argument passed to the filter function\n * @returns {boolean} true if this item should be skipped\n */\n\n\nfunction mustFilterItem(condition, context) {\n  return condition ? !condition(context) : false;\n}\n/**\n * Extend the scope of the looped template\n * @param   {Object} scope - current template scope\n * @param   {Object} options - options\n * @param   {string} options.itemName - key to identify the looped item in the new context\n * @param   {string} options.indexName - key to identify the index of the looped item\n * @param   {number} options.index - current index\n * @param   {*} options.item - collection item looped\n * @returns {Object} enhanced scope object\n */\n\n\nfunction extendScope(scope, _ref) {\n  let {\n    itemName,\n    indexName,\n    index,\n    item\n  } = _ref;\n  defineProperty(scope, itemName, item);\n  if (indexName) defineProperty(scope, indexName, index);\n  return scope;\n}\n/**\n * Loop the current template items\n * @param   {Array} items - expression collection value\n * @param   {*} scope - template scope\n * @param   {*} parentScope - scope of the parent template\n * @param   {EachBinding} binding - each binding object instance\n * @returns {Object} data\n * @returns {Map} data.newChildrenMap - a Map containing the new children template structure\n * @returns {Array} data.batches - array containing the template lifecycle functions to trigger\n * @returns {Array} data.futureNodes - array containing the nodes we need to diff\n */\n\n\nfunction createPatch(items, scope, parentScope, binding) {\n  const {\n    condition,\n    template,\n    childrenMap,\n    itemName,\n    getKey,\n    indexName,\n    root,\n    isTemplateTag\n  } = binding;\n  const newChildrenMap = new Map();\n  const batches = [];\n  const futureNodes = [];\n  items.forEach((item, index) => {\n    const context = extendScope(Object.create(scope), {\n      itemName,\n      indexName,\n      index,\n      item\n    });\n    const key = getKey ? getKey(context) : index;\n    const oldItem = childrenMap.get(key);\n    const nodes = [];\n\n    if (mustFilterItem(condition, context)) {\n      return;\n    }\n\n    const mustMount = !oldItem;\n    const componentTemplate = oldItem ? oldItem.template : template.clone();\n    const el = componentTemplate.el || root.cloneNode();\n    const meta = isTemplateTag && mustMount ? createTemplateMeta(componentTemplate) : componentTemplate.meta;\n\n    if (mustMount) {\n      batches.push(() => componentTemplate.mount(el, context, parentScope, meta));\n    } else {\n      batches.push(() => componentTemplate.update(context, parentScope));\n    } // create the collection of nodes to update or to add\n    // in case of template tags we need to add all its children nodes\n\n\n    if (isTemplateTag) {\n      nodes.push(...meta.children);\n    } else {\n      nodes.push(el);\n    } // delete the old item from the children map\n\n\n    childrenMap.delete(key);\n    futureNodes.push(...nodes); // update the children map\n\n    newChildrenMap.set(key, {\n      nodes,\n      template: componentTemplate,\n      context,\n      index\n    });\n  });\n  return {\n    newChildrenMap,\n    batches,\n    futureNodes\n  };\n}\n\nfunction create$6(node, _ref2) {\n  let {\n    evaluate,\n    condition,\n    itemName,\n    indexName,\n    getKey,\n    template\n  } = _ref2;\n  const placeholder = document.createTextNode('');\n  const root = node.cloneNode();\n  insertBefore(placeholder, node);\n  removeChild(node);\n  return Object.assign({}, EachBinding, {\n    childrenMap: new Map(),\n    node,\n    root,\n    condition,\n    evaluate,\n    isTemplateTag: isTemplate(root),\n    template: template.createDOM(node),\n    getKey,\n    indexName,\n    itemName,\n    placeholder\n  });\n}\n\n/**\n * Binding responsible for the `if` directive\n */\n\nconst IfBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // isTemplateTag: false,\n  // placeholder: null,\n  // template: null,\n  // API methods\n  mount(scope, parentScope) {\n    return this.update(scope, parentScope);\n  },\n\n  update(scope, parentScope) {\n    const value = !!this.evaluate(scope);\n    const mustMount = !this.value && value;\n    const mustUnmount = this.value && !value;\n\n    const mount = () => {\n      const pristine = this.node.cloneNode();\n      insertBefore(pristine, this.placeholder);\n      this.template = this.template.clone();\n      this.template.mount(pristine, scope, parentScope);\n    };\n\n    switch (true) {\n      case mustMount:\n        mount();\n        break;\n\n      case mustUnmount:\n        this.unmount(scope);\n        break;\n\n      default:\n        if (value) this.template.update(scope, parentScope);\n    }\n\n    this.value = value;\n    return this;\n  },\n\n  unmount(scope, parentScope) {\n    this.template.unmount(scope, parentScope, true);\n    return this;\n  }\n\n};\nfunction create$5(node, _ref) {\n  let {\n    evaluate,\n    template\n  } = _ref;\n  const placeholder = document.createTextNode('');\n  insertBefore(placeholder, node);\n  removeChild(node);\n  return Object.assign({}, IfBinding, {\n    node,\n    evaluate,\n    placeholder,\n    template: template.createDOM(node)\n  });\n}\n\n/**\n * Throw an error with a descriptive message\n * @param   { string } message - error message\n * @returns { undefined } hoppla.. at this point the program should stop working\n */\n\nfunction panic(message) {\n  throw new Error(message);\n}\n/**\n * Returns the memoized (cached) function.\n * // borrowed from https://www.30secondsofcode.org/js/s/memoize\n * @param {Function} fn - function to memoize\n * @returns {Function} memoize function\n */\n\nfunction memoize(fn) {\n  const cache = new Map();\n\n  const cached = val => {\n    return cache.has(val) ? cache.get(val) : cache.set(val, fn.call(this, val)) && cache.get(val);\n  };\n\n  cached.cache = cache;\n  return cached;\n}\n/**\n * Evaluate a list of attribute expressions\n * @param   {Array} attributes - attribute expressions generated by the riot compiler\n * @returns {Object} key value pairs with the result of the computation\n */\n\nfunction evaluateAttributeExpressions(attributes) {\n  return attributes.reduce((acc, attribute) => {\n    const {\n      value,\n      type\n    } = attribute;\n\n    switch (true) {\n      // spread attribute\n      case !attribute.name && type === ATTRIBUTE:\n        return Object.assign({}, acc, value);\n      // value attribute\n\n      case type === VALUE:\n        acc.value = attribute.value;\n        break;\n      // normal attributes\n\n      default:\n        acc[dashToCamelCase(attribute.name)] = attribute.value;\n    }\n\n    return acc;\n  }, {});\n}\n\nconst ElementProto = typeof Element === 'undefined' ? {} : Element.prototype;\nconst isNativeHtmlProperty = memoize(name => ElementProto.hasOwnProperty(name)); // eslint-disable-line\n\n/**\n * Add all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} attributes - object containing the attributes names and values\n * @returns {undefined} sorry it's a void function :(\n */\n\nfunction setAllAttributes(node, attributes) {\n  Object.entries(attributes).forEach(_ref => {\n    let [name, value] = _ref;\n    return attributeExpression(node, {\n      name\n    }, value);\n  });\n}\n/**\n * Remove all the attributes provided\n * @param   {HTMLElement} node - target node\n * @param   {Object} newAttributes - object containing all the new attribute names\n * @param   {Object} oldAttributes - object containing all the old attribute names\n * @returns {undefined} sorry it's a void function :(\n */\n\n\nfunction removeAllAttributes(node, newAttributes, oldAttributes) {\n  const newKeys = newAttributes ? Object.keys(newAttributes) : [];\n  Object.keys(oldAttributes).filter(name => !newKeys.includes(name)).forEach(attribute => node.removeAttribute(attribute));\n}\n/**\n * Check whether the attribute value can be rendered\n * @param {*} value - expression value\n * @returns {boolean} true if we can render this attribute value\n */\n\n\nfunction canRenderAttribute(value) {\n  return value === true || ['string', 'number'].includes(typeof value);\n}\n/**\n * Check whether the attribute should be removed\n * @param {*} value - expression value\n * @returns {boolean} boolean - true if the attribute can be removed}\n */\n\n\nfunction shouldRemoveAttribute(value) {\n  return !value && value !== 0;\n}\n/**\n * This methods handles the DOM attributes updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - attribute name\n * @param   {*} value - new expression value\n * @param   {*} oldValue - the old expression cached value\n * @returns {undefined}\n */\n\n\nfunction attributeExpression(node, _ref2, value, oldValue) {\n  let {\n    name\n  } = _ref2;\n\n  // is it a spread operator? {...attributes}\n  if (!name) {\n    if (oldValue) {\n      // remove all the old attributes\n      removeAllAttributes(node, value, oldValue);\n    } // is the value still truthy?\n\n\n    if (value) {\n      setAllAttributes(node, value);\n    }\n\n    return;\n  } // handle boolean attributes\n\n\n  if (!isNativeHtmlProperty(name) && (isBoolean(value) || isObject(value) || isFunction(value))) {\n    node[name] = value;\n  }\n\n  if (shouldRemoveAttribute(value)) {\n    node.removeAttribute(name);\n  } else if (canRenderAttribute(value)) {\n    node.setAttribute(name, normalizeValue(name, value));\n  }\n}\n/**\n * Get the value as string\n * @param   {string} name - attribute name\n * @param   {*} value - user input value\n * @returns {string} input value as string\n */\n\nfunction normalizeValue(name, value) {\n  // be sure that expressions like selected={ true } will be always rendered as selected='selected'\n  return value === true ? name : value;\n}\n\nconst RE_EVENTS_PREFIX = /^on/;\n\nconst getCallbackAndOptions = value => Array.isArray(value) ? value : [value, false]; // see also https://medium.com/@WebReflection/dom-handleevent-a-cross-platform-standard-since-year-2000-5bf17287fd38\n\n\nconst EventListener = {\n  handleEvent(event) {\n    this[event.type](event);\n  }\n\n};\nconst ListenersWeakMap = new WeakMap();\n\nconst createListener = node => {\n  const listener = Object.create(EventListener);\n  ListenersWeakMap.set(node, listener);\n  return listener;\n};\n/**\n * Set a new event listener\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {string} expression.name - event name\n * @param   {*} value - new expression value\n * @returns {value} the callback just received\n */\n\n\nfunction eventExpression(node, _ref, value) {\n  let {\n    name\n  } = _ref;\n  const normalizedEventName = name.replace(RE_EVENTS_PREFIX, '');\n  const eventListener = ListenersWeakMap.get(node) || createListener(node);\n  const [callback, options] = getCallbackAndOptions(value);\n  const handler = eventListener[normalizedEventName];\n  const mustRemoveEvent = handler && !callback;\n  const mustAddEvent = callback && !handler;\n\n  if (mustRemoveEvent) {\n    node.removeEventListener(normalizedEventName, eventListener);\n  }\n\n  if (mustAddEvent) {\n    node.addEventListener(normalizedEventName, eventListener, options);\n  }\n\n  eventListener[normalizedEventName] = callback;\n}\n\n/**\n * Normalize the user value in order to render a empty string in case of falsy values\n * @param   {*} value - user input value\n * @returns {string} hopefully a string\n */\n\nfunction normalizeStringValue(value) {\n  return isNil(value) ? '' : value;\n}\n\n/**\n * Get the the target text node to update or create one from of a comment node\n * @param   {HTMLElement} node - any html element containing childNodes\n * @param   {number} childNodeIndex - index of the text node in the childNodes list\n * @returns {Text} the text node to update\n */\n\nconst getTextNode = (node, childNodeIndex) => {\n  const target = node.childNodes[childNodeIndex];\n\n  if (target.nodeType === Node.COMMENT_NODE) {\n    const textNode = document.createTextNode('');\n    node.replaceChild(textNode, target);\n    return textNode;\n  }\n\n  return target;\n};\n/**\n * This methods handles a simple text expression update\n * @param   {HTMLElement} node - target node\n * @param   {Object} data - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\nfunction textExpression(node, data, value) {\n  node.data = normalizeStringValue(value);\n}\n\n/**\n * This methods handles the input fileds value updates\n * @param   {HTMLElement} node - target node\n * @param   {Object} expression - expression object\n * @param   {*} value - new expression value\n * @returns {undefined}\n */\n\nfunction valueExpression(node, expression, value) {\n  node.value = normalizeStringValue(value);\n}\n\nvar expressions = {\n  [ATTRIBUTE]: attributeExpression,\n  [EVENT]: eventExpression,\n  [TEXT]: textExpression,\n  [VALUE]: valueExpression\n};\n\nconst Expression = {\n  // Static props\n  // node: null,\n  // value: null,\n  // API methods\n\n  /**\n   * Mount the expression evaluating its initial value\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  mount(scope) {\n    // hopefully a pure function\n    this.value = this.evaluate(scope); // IO() DOM updates\n\n    apply(this, this.value);\n    return this;\n  },\n\n  /**\n   * Update the expression if its value changed\n   * @param   {*} scope - argument passed to the expression to evaluate its current values\n   * @returns {Expression} self\n   */\n  update(scope) {\n    // pure function\n    const value = this.evaluate(scope);\n\n    if (this.value !== value) {\n      // IO() DOM updates\n      apply(this, value);\n      this.value = value;\n    }\n\n    return this;\n  },\n\n  /**\n   * Expression teardown method\n   * @returns {Expression} self\n   */\n  unmount() {\n    // unmount only the event handling expressions\n    if (this.type === EVENT) apply(this, null);\n    return this;\n  }\n\n};\n/**\n * IO() function to handle the DOM updates\n * @param {Expression} expression - expression object\n * @param {*} value - current expression value\n * @returns {undefined}\n */\n\nfunction apply(expression, value) {\n  return expressions[expression.type](expression.node, expression, value, expression.value);\n}\n\nfunction create$4(node, data) {\n  return Object.assign({}, Expression, data, {\n    node: data.type === TEXT ? getTextNode(node, data.childNodeIndex) : node\n  });\n}\n\n/**\n * Create a flat object having as keys a list of methods that if dispatched will propagate\n * on the whole collection\n * @param   {Array} collection - collection to iterate\n * @param   {Array<string>} methods - methods to execute on each item of the collection\n * @param   {*} context - context returned by the new methods created\n * @returns {Object} a new object to simplify the the nested methods dispatching\n */\nfunction flattenCollectionMethods(collection, methods, context) {\n  return methods.reduce((acc, method) => {\n    return Object.assign({}, acc, {\n      [method]: scope => {\n        return collection.map(item => item[method](scope)) && context;\n      }\n    });\n  }, {});\n}\n\nfunction create$3(node, _ref) {\n  let {\n    expressions\n  } = _ref;\n  return Object.assign({}, flattenCollectionMethods(expressions.map(expression => create$4(node, expression)), ['mount', 'update', 'unmount']));\n}\n\nfunction extendParentScope(attributes, scope, parentScope) {\n  if (!attributes || !attributes.length) return parentScope;\n  const expressions = attributes.map(attr => Object.assign({}, attr, {\n    value: attr.evaluate(scope)\n  }));\n  return Object.assign(Object.create(parentScope || null), evaluateAttributeExpressions(expressions));\n} // this function is only meant to fix an edge case\n// https://github.com/riot/riot/issues/2842\n\n\nconst getRealParent = (scope, parentScope) => scope[PARENT_KEY_SYMBOL] || parentScope;\n\nconst SlotBinding = {\n  // dynamic binding properties\n  // node: null,\n  // name: null,\n  attributes: [],\n\n  // template: null,\n  getTemplateScope(scope, parentScope) {\n    return extendParentScope(this.attributes, scope, parentScope);\n  },\n\n  // API methods\n  mount(scope, parentScope) {\n    const templateData = scope.slots ? scope.slots.find(_ref => {\n      let {\n        id\n      } = _ref;\n      return id === this.name;\n    }) : false;\n    const {\n      parentNode\n    } = this.node;\n    const realParent = getRealParent(scope, parentScope);\n    this.template = templateData && create(templateData.html, templateData.bindings).createDOM(parentNode);\n\n    if (this.template) {\n      cleanNode(this.node);\n      this.template.mount(this.node, this.getTemplateScope(scope, realParent), realParent);\n      this.template.children = Array.from(this.node.childNodes);\n    }\n\n    moveSlotInnerContent(this.node);\n    removeChild(this.node);\n    return this;\n  },\n\n  update(scope, parentScope) {\n    if (this.template) {\n      const realParent = getRealParent(scope, parentScope);\n      this.template.update(this.getTemplateScope(scope, realParent), realParent);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (this.template) {\n      this.template.unmount(this.getTemplateScope(scope, parentScope), null, mustRemoveRoot);\n    }\n\n    return this;\n  }\n\n};\n/**\n * Move the inner content of the slots outside of them\n * @param   {HTMLElement} slot - slot node\n * @returns {undefined} it's a void method ¯\\_(ツ)_/¯\n */\n\nfunction moveSlotInnerContent(slot) {\n  const child = slot && slot.firstChild;\n  if (!child) return;\n  insertBefore(child, slot);\n  moveSlotInnerContent(slot);\n}\n/**\n * Create a single slot binding\n * @param   {HTMLElement} node - slot node\n * @param   {string} name - slot id\n * @param   {AttributeExpressionData[]} attributes - slot attributes\n * @returns {Object} Slot binding object\n */\n\n\nfunction createSlot(node, _ref2) {\n  let {\n    name,\n    attributes\n  } = _ref2;\n  return Object.assign({}, SlotBinding, {\n    attributes,\n    node,\n    name\n  });\n}\n\n/**\n * Create a new tag object if it was registered before, otherwise fallback to the simple\n * template chunk\n * @param   {Function} component - component factory function\n * @param   {Array<Object>} slots - array containing the slots markup\n * @param   {Array} attributes - dynamic attributes that will be received by the tag element\n * @returns {TagImplementation|TemplateChunk} a tag implementation or a template chunk as fallback\n */\n\nfunction getTag(component, slots, attributes) {\n  if (slots === void 0) {\n    slots = [];\n  }\n\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  // if this tag was registered before we will return its implementation\n  if (component) {\n    return component({\n      slots,\n      attributes\n    });\n  } // otherwise we return a template chunk\n\n\n  return create(slotsToMarkup(slots), [...slotBindings(slots), {\n    // the attributes should be registered as binding\n    // if we fallback to a normal template chunk\n    expressions: attributes.map(attr => {\n      return Object.assign({\n        type: ATTRIBUTE\n      }, attr);\n    })\n  }]);\n}\n/**\n * Merge all the slots bindings into a single array\n * @param   {Array<Object>} slots - slots collection\n * @returns {Array<Bindings>} flatten bindings array\n */\n\n\nfunction slotBindings(slots) {\n  return slots.reduce((acc, _ref) => {\n    let {\n      bindings\n    } = _ref;\n    return acc.concat(bindings);\n  }, []);\n}\n/**\n * Merge all the slots together in a single markup string\n * @param   {Array<Object>} slots - slots collection\n * @returns {string} markup of all the slots in a single string\n */\n\n\nfunction slotsToMarkup(slots) {\n  return slots.reduce((acc, slot) => {\n    return acc + slot.html;\n  }, '');\n}\n\nconst TagBinding = {\n  // dynamic binding properties\n  // node: null,\n  // evaluate: null,\n  // name: null,\n  // slots: null,\n  // tag: null,\n  // attributes: null,\n  // getComponent: null,\n  mount(scope) {\n    return this.update(scope);\n  },\n\n  update(scope, parentScope) {\n    const name = this.evaluate(scope); // simple update\n\n    if (name && name === this.name) {\n      this.tag.update(scope);\n    } else {\n      // unmount the old tag if it exists\n      this.unmount(scope, parentScope, true); // mount the new tag\n\n      this.name = name;\n      this.tag = getTag(this.getComponent(name), this.slots, this.attributes);\n      this.tag.mount(this.node, scope);\n    }\n\n    return this;\n  },\n\n  unmount(scope, parentScope, keepRootTag) {\n    if (this.tag) {\n      // keep the root tag\n      this.tag.unmount(keepRootTag);\n    }\n\n    return this;\n  }\n\n};\nfunction create$2(node, _ref2) {\n  let {\n    evaluate,\n    getComponent,\n    slots,\n    attributes\n  } = _ref2;\n  return Object.assign({}, TagBinding, {\n    node,\n    evaluate,\n    slots,\n    attributes,\n    getComponent\n  });\n}\n\nvar bindings = {\n  [IF]: create$5,\n  [SIMPLE]: create$3,\n  [EACH]: create$6,\n  [TAG]: create$2,\n  [SLOT]: createSlot\n};\n\n/**\n * Text expressions in a template tag will get childNodeIndex value normalized\n * depending on the position of the <template> tag offset\n * @param   {Expression[]} expressions - riot expressions array\n * @param   {number} textExpressionsOffset - offset of the <template> tag\n * @returns {Expression[]} expressions containing the text expressions normalized\n */\n\nfunction fixTextExpressionsOffset(expressions, textExpressionsOffset) {\n  return expressions.map(e => e.type === TEXT ? Object.assign({}, e, {\n    childNodeIndex: e.childNodeIndex + textExpressionsOffset\n  }) : e);\n}\n/**\n * Bind a new expression object to a DOM node\n * @param   {HTMLElement} root - DOM node where to bind the expression\n * @param   {TagBindingData} binding - binding data\n * @param   {number|null} templateTagOffset - if it's defined we need to fix the text expressions childNodeIndex offset\n * @returns {Binding} Binding object\n */\n\n\nfunction create$1(root, binding, templateTagOffset) {\n  const {\n    selector,\n    type,\n    redundantAttribute,\n    expressions\n  } = binding; // find the node to apply the bindings\n\n  const node = selector ? root.querySelector(selector) : root; // remove eventually additional attributes created only to select this node\n\n  if (redundantAttribute) node.removeAttribute(redundantAttribute);\n  const bindingExpressions = expressions || []; // init the binding\n\n  return (bindings[type] || bindings[SIMPLE])(node, Object.assign({}, binding, {\n    expressions: templateTagOffset && !selector ? fixTextExpressionsOffset(bindingExpressions, templateTagOffset) : bindingExpressions\n  }));\n}\n\nfunction createHTMLTree(html, root) {\n  const template = isTemplate(root) ? root : document.createElement('template');\n  template.innerHTML = html;\n  return template.content;\n} // for svg nodes we need a bit more work\n\n\nfunction createSVGTree(html, container) {\n  // create the SVGNode\n  const svgNode = container.ownerDocument.importNode(new window.DOMParser().parseFromString(`<svg xmlns=\"http://www.w3.org/2000/svg\">${html}</svg>`, 'application/xml').documentElement, true);\n  return svgNode;\n}\n/**\n * Create the DOM that will be injected\n * @param {Object} root - DOM node to find out the context where the fragment will be created\n * @param   {string} html - DOM to create as string\n * @returns {HTMLDocumentFragment|HTMLElement} a new html fragment\n */\n\n\nfunction createDOMTree(root, html) {\n  if (isSvg(root)) return createSVGTree(html, root);\n  return createHTMLTree(html, root);\n}\n\n/**\n * Inject the DOM tree into a target node\n * @param   {HTMLElement} el - target element\n * @param   {DocumentFragment|SVGElement} dom - dom tree to inject\n * @returns {undefined}\n */\n\nfunction injectDOM(el, dom) {\n  switch (true) {\n    case isSvg(el):\n      moveChildren(dom, el);\n      break;\n\n    case isTemplate(el):\n      el.parentNode.replaceChild(dom, el);\n      break;\n\n    default:\n      el.appendChild(dom);\n  }\n}\n\n/**\n * Create the Template DOM skeleton\n * @param   {HTMLElement} el - root node where the DOM will be injected\n * @param   {string|HTMLElement} html - HTML markup or HTMLElement that will be injected into the root node\n * @returns {?DocumentFragment} fragment that will be injected into the root node\n */\n\nfunction createTemplateDOM(el, html) {\n  return html && (typeof html === 'string' ? createDOMTree(el, html) : html);\n}\n/**\n * Get the offset of the <template> tag\n * @param {HTMLElement} parentNode - template tag parent node\n * @param {HTMLElement} el - the template tag we want to render\n * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n * @returns {number} offset of the <template> tag calculated from its siblings DOM nodes\n */\n\n\nfunction getTemplateTagOffset(parentNode, el, meta) {\n  const siblings = Array.from(parentNode.childNodes);\n  return Math.max(siblings.indexOf(el), siblings.indexOf(meta.head) + 1, 0);\n}\n/**\n * Template Chunk model\n * @type {Object}\n */\n\n\nconst TemplateChunk = Object.freeze({\n  // Static props\n  // bindings: null,\n  // bindingsData: null,\n  // html: null,\n  // isTemplateTag: false,\n  // fragment: null,\n  // children: null,\n  // dom: null,\n  // el: null,\n\n  /**\n   * Create the template DOM structure that will be cloned on each mount\n   * @param   {HTMLElement} el - the root node\n   * @returns {TemplateChunk} self\n   */\n  createDOM(el) {\n    // make sure that the DOM gets created before cloning the template\n    this.dom = this.dom || createTemplateDOM(el, this.html) || document.createDocumentFragment();\n    return this;\n  },\n\n  // API methods\n\n  /**\n   * Attach the template to a DOM node\n   * @param   {HTMLElement} el - target DOM node\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {Object} meta - meta properties needed to handle the <template> tags in loops\n   * @returns {TemplateChunk} self\n   */\n  mount(el, scope, parentScope, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n\n    if (!el) throw new Error('Please provide DOM node to mount properly your template');\n    if (this.el) this.unmount(scope); // <template> tags require a bit more work\n    // the template fragment might be already created via meta outside of this call\n\n    const {\n      fragment,\n      children,\n      avoidDOMInjection\n    } = meta; // <template> bindings of course can not have a root element\n    // so we check the parent node to set the query selector bindings\n\n    const {\n      parentNode\n    } = children ? children[0] : el;\n    const isTemplateTag = isTemplate(el);\n    const templateTagOffset = isTemplateTag ? getTemplateTagOffset(parentNode, el, meta) : null; // create the DOM if it wasn't created before\n\n    this.createDOM(el); // create the DOM of this template cloning the original DOM structure stored in this instance\n    // notice that if a documentFragment was passed (via meta) we will use it instead\n\n    const cloneNode = fragment || this.dom.cloneNode(true); // store root node\n    // notice that for template tags the root note will be the parent tag\n\n    this.el = isTemplateTag ? parentNode : el; // create the children array only for the <template> fragments\n\n    this.children = isTemplateTag ? children || Array.from(cloneNode.childNodes) : null; // inject the DOM into the el only if a fragment is available\n\n    if (!avoidDOMInjection && cloneNode) injectDOM(el, cloneNode); // create the bindings\n\n    this.bindings = this.bindingsData.map(binding => create$1(this.el, binding, templateTagOffset));\n    this.bindings.forEach(b => b.mount(scope, parentScope)); // store the template meta properties\n\n    this.meta = meta;\n    return this;\n  },\n\n  /**\n   * Update the template with fresh data\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @returns {TemplateChunk} self\n   */\n  update(scope, parentScope) {\n    this.bindings.forEach(b => b.update(scope, parentScope));\n    return this;\n  },\n\n  /**\n   * Remove the template from the node where it was initially mounted\n   * @param   {*} scope - template data\n   * @param   {*} parentScope - scope of the parent template tag\n   * @param   {boolean|null} mustRemoveRoot - if true remove the root element,\n   * if false or undefined clean the root tag content, if null don't touch the DOM\n   * @returns {TemplateChunk} self\n   */\n  unmount(scope, parentScope, mustRemoveRoot) {\n    if (mustRemoveRoot === void 0) {\n      mustRemoveRoot = false;\n    }\n\n    const el = this.el;\n\n    if (!el) {\n      return this;\n    }\n\n    this.bindings.forEach(b => b.unmount(scope, parentScope, mustRemoveRoot));\n\n    switch (true) {\n      // pure components should handle the DOM unmount updates by themselves\n      // for mustRemoveRoot === null don't touch the DOM\n      case el[IS_PURE_SYMBOL] || mustRemoveRoot === null:\n        break;\n      // if children are declared, clear them\n      // applicable for <template> and <slot/> bindings\n\n      case Array.isArray(this.children):\n        clearChildren(this.children);\n        break;\n      // clean the node children only\n\n      case !mustRemoveRoot:\n        cleanNode(el);\n        break;\n      // remove the root node only if the mustRemoveRoot is truly\n\n      case !!mustRemoveRoot:\n        removeChild(el);\n        break;\n    }\n\n    this.el = null;\n    return this;\n  },\n\n  /**\n   * Clone the template chunk\n   * @returns {TemplateChunk} a clone of this object resetting the this.el property\n   */\n  clone() {\n    return Object.assign({}, this, {\n      meta: {},\n      el: null\n    });\n  }\n\n});\n/**\n * Create a template chunk wiring also the bindings\n * @param   {string|HTMLElement} html - template string\n * @param   {BindingData[]} bindings - bindings collection\n * @returns {TemplateChunk} a new TemplateChunk copy\n */\n\nfunction create(html, bindings) {\n  if (bindings === void 0) {\n    bindings = [];\n  }\n\n  return Object.assign({}, TemplateChunk, {\n    html,\n    bindingsData: bindings\n  });\n}\n\n/**\n * Method used to bind expressions to a DOM node\n * @param   {string|HTMLElement} html - your static template html structure\n * @param   {Array} bindings - list of the expressions to bind to update the markup\n * @returns {TemplateChunk} a new TemplateChunk object having the `update`,`mount`, `unmount` and `clone` methods\n *\n * @example\n *\n * riotDOMBindings\n *  .template(\n *   `<div expr0><!----></div><div><p expr1><!----><section expr2></section></p>`,\n *   [\n *     {\n *       selector: '[expr0]',\n *       redundantAttribute: 'expr0',\n *       expressions: [\n *         {\n *           type: expressionTypes.TEXT,\n *           childNodeIndex: 0,\n *           evaluate(scope) {\n *             return scope.time;\n *           },\n *         },\n *       ],\n *     },\n *     {\n *       selector: '[expr1]',\n *       redundantAttribute: 'expr1',\n *       expressions: [\n *         {\n *           type: expressionTypes.TEXT,\n *           childNodeIndex: 0,\n *           evaluate(scope) {\n *             return scope.name;\n *           },\n *         },\n *         {\n *           type: 'attribute',\n *           name: 'style',\n *           evaluate(scope) {\n *             return scope.style;\n *           },\n *         },\n *       ],\n *     },\n *     {\n *       selector: '[expr2]',\n *       redundantAttribute: 'expr2',\n *       type: bindingTypes.IF,\n *       evaluate(scope) {\n *         return scope.isVisible;\n *       },\n *       template: riotDOMBindings.template('hello there'),\n *     },\n *   ]\n * )\n */\n\nvar DOMBindings = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  template: create,\n  createBinding: create$1,\n  createExpression: create$4,\n  bindingTypes: bindingTypes,\n  expressionTypes: expressionTypes\n});\n\nfunction noop() {\n  return this;\n}\n/**\n * Autobind the methods of a source object to itself\n * @param   {Object} source - probably a riot tag instance\n * @param   {Array<string>} methods - list of the methods to autobind\n * @returns {Object} the original object received\n */\n\nfunction autobindMethods(source, methods) {\n  methods.forEach(method => {\n    source[method] = source[method].bind(source);\n  });\n  return source;\n}\n/**\n * Call the first argument received only if it's a function otherwise return it as it is\n * @param   {*} source - anything\n * @returns {*} anything\n */\n\nfunction callOrAssign(source) {\n  return isFunction(source) ? source.prototype && source.prototype.constructor ? new source() : source() : source;\n}\n\n/**\n * Converts any DOM node/s to a loopable array\n * @param   { HTMLElement|NodeList } els - single html element or a node list\n * @returns { Array } always a loopable object\n */\nfunction domToArray(els) {\n  // can this object be already looped?\n  if (!Array.isArray(els)) {\n    // is it a node list?\n    if (/^\\[object (HTMLCollection|NodeList|Object)\\]$/.test(Object.prototype.toString.call(els)) && typeof els.length === 'number') return Array.from(els);else // if it's a single node\n      // it will be returned as \"array\" with one single entry\n      return [els];\n  } // this object could be looped out of the box\n\n\n  return els;\n}\n\n/**\n * Simple helper to find DOM nodes returning them as array like loopable object\n * @param   { string|DOMNodeList } selector - either the query or the DOM nodes to arraify\n * @param   { HTMLElement }        ctx      - context defining where the query will search for the DOM nodes\n * @returns { Array } DOM nodes found as array\n */\n\nfunction $(selector, ctx) {\n  return domToArray(typeof selector === 'string' ? (ctx || document).querySelectorAll(selector) : selector);\n}\n\n/**\n * Normalize the return values, in case of a single value we avoid to return an array\n * @param   { Array } values - list of values we want to return\n * @returns { Array|string|boolean } either the whole list of values or the single one found\n * @private\n */\n\nconst normalize = values => values.length === 1 ? values[0] : values;\n/**\n * Parse all the nodes received to get/remove/check their attributes\n * @param   { HTMLElement|NodeList|Array } els    - DOM node/s to parse\n * @param   { string|Array }               name   - name or list of attributes\n * @param   { string }                     method - method that will be used to parse the attributes\n * @returns { Array|string } result of the parsing in a list or a single value\n * @private\n */\n\n\nfunction parseNodes(els, name, method) {\n  const names = typeof name === 'string' ? [name] : name;\n  return normalize(domToArray(els).map(el => {\n    return normalize(names.map(n => el[method](n)));\n  }));\n}\n/**\n * Set any attribute on a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Object }              name  - either the name of the attribute to set\n *                                                 or a list of properties as object key - value\n * @param   { string }                     value - the new value of the attribute (optional)\n * @returns { HTMLElement|NodeList|Array } the original array of elements passed to this function\n *\n * @example\n *\n * import { set } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * set(img, 'width', 100)\n *\n * // or also\n * set(img, {\n *   width: 300,\n *   height: 300\n * })\n *\n */\n\n\nfunction set(els, name, value) {\n  const attrs = typeof name === 'object' ? name : {\n    [name]: value\n  };\n  const props = Object.keys(attrs);\n  domToArray(els).forEach(el => {\n    props.forEach(prop => el.setAttribute(prop, attrs[prop]));\n  });\n  return els;\n}\n/**\n * Get any attribute from a single or a list of DOM nodes\n * @param   { HTMLElement|NodeList|Array } els   - DOM node/s to parse\n * @param   { string|Array }               name  - name or list of attributes to get\n * @returns { Array|string } list of the attributes found\n *\n * @example\n *\n * import { get } from 'bianco.attr'\n *\n * const img = document.createElement('img')\n *\n * get(img, 'width') // => '200'\n *\n * // or also\n * get(img, ['width', 'height']) // => ['200', '300']\n *\n * // or also\n * get([img1, img2], ['width', 'height']) // => [['200', '300'], ['500', '200']]\n */\n\nfunction get(els, name) {\n  return parseNodes(els, name, 'getAttribute');\n}\n\nconst CSS_BY_NAME = new Map();\nconst STYLE_NODE_SELECTOR = 'style[riot]'; // memoized curried function\n\nconst getStyleNode = (style => {\n  return () => {\n    // lazy evaluation:\n    // if this function was already called before\n    // we return its cached result\n    if (style) return style; // create a new style element or use an existing one\n    // and cache it internally\n\n    style = $(STYLE_NODE_SELECTOR)[0] || document.createElement('style');\n    set(style, 'type', 'text/css');\n    /* istanbul ignore next */\n\n    if (!style.parentNode) document.head.appendChild(style);\n    return style;\n  };\n})();\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\n\n\nvar cssManager = {\n  CSS_BY_NAME,\n\n  /**\n   * Save a tag style to be later injected into DOM\n   * @param { string } name - if it's passed we will map the css to a tagname\n   * @param { string } css - css string\n   * @returns {Object} self\n   */\n  add(name, css) {\n    if (!CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.set(name, css);\n      this.inject();\n    }\n\n    return this;\n  },\n\n  /**\n   * Inject all previously saved tag styles into DOM\n   * innerHTML seems slow: http://jsperf.com/riot-insert-style\n   * @returns {Object} self\n   */\n  inject() {\n    getStyleNode().innerHTML = [...CSS_BY_NAME.values()].join('\\n');\n    return this;\n  },\n\n  /**\n   * Remove a tag style from the DOM\n   * @param {string} name a registered tagname\n   * @returns {Object} self\n   */\n  remove(name) {\n    if (CSS_BY_NAME.has(name)) {\n      CSS_BY_NAME.delete(name);\n      this.inject();\n    }\n\n    return this;\n  }\n\n};\n\n/**\n * Function to curry any javascript method\n * @param   {Function}  fn - the target function we want to curry\n * @param   {...[args]} acc - initial arguments\n * @returns {Function|*} it will return a function until the target function\n *                       will receive all of its arguments\n */\nfunction curry(fn) {\n  for (var _len = arguments.length, acc = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    acc[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    args = [...acc, ...args];\n    return args.length < fn.length ? curry(fn, ...args) : fn(...args);\n  };\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   {HTMLElement} element - DOM node we want to inspect\n * @returns {string} name to identify this dom node in riot\n */\n\nfunction getName(element) {\n  return get(element, IS_DIRECTIVE) || element.tagName.toLowerCase();\n}\n\nconst COMPONENT_CORE_HELPERS = Object.freeze({\n  // component helpers\n  $(selector) {\n    return $(selector, this.root)[0];\n  },\n\n  $$(selector) {\n    return $(selector, this.root);\n  }\n\n});\nconst PURE_COMPONENT_API = Object.freeze({\n  [MOUNT_METHOD_KEY]: noop,\n  [UPDATE_METHOD_KEY]: noop,\n  [UNMOUNT_METHOD_KEY]: noop\n});\nconst COMPONENT_LIFECYCLE_METHODS = Object.freeze({\n  [SHOULD_UPDATE_KEY]: noop,\n  [ON_BEFORE_MOUNT_KEY]: noop,\n  [ON_MOUNTED_KEY]: noop,\n  [ON_BEFORE_UPDATE_KEY]: noop,\n  [ON_UPDATED_KEY]: noop,\n  [ON_BEFORE_UNMOUNT_KEY]: noop,\n  [ON_UNMOUNTED_KEY]: noop\n});\nconst MOCKED_TEMPLATE_INTERFACE = Object.assign({}, PURE_COMPONENT_API, {\n  clone: noop,\n  createDOM: noop\n});\n/**\n * Performance optimization for the recursive components\n * @param  {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {Object} component like interface\n */\n\nconst memoizedCreateComponent = memoize(createComponent);\n/**\n * Evaluate the component properties either from its real attributes or from its initial user properties\n * @param   {HTMLElement} element - component root\n * @param   {Object}  initialProps - initial props\n * @returns {Object} component props key value pairs\n */\n\nfunction evaluateInitialProps(element, initialProps) {\n  if (initialProps === void 0) {\n    initialProps = {};\n  }\n\n  return Object.assign({}, DOMattributesToObject(element), callOrAssign(initialProps));\n}\n/**\n * Bind a DOM node to its component object\n * @param   {HTMLElement} node - html node mounted\n * @param   {Object} component - Riot.js component object\n * @returns {Object} the component object received as second argument\n */\n\n\nconst bindDOMNodeToComponentObject = (node, component) => node[DOM_COMPONENT_INSTANCE_PROPERTY$1] = component;\n/**\n * Wrap the Riot.js core API methods using a mapping function\n * @param   {Function} mapFunction - lifting function\n * @returns {Object} an object having the { mount, update, unmount } functions\n */\n\n\nfunction createCoreAPIMethods(mapFunction) {\n  return [MOUNT_METHOD_KEY, UPDATE_METHOD_KEY, UNMOUNT_METHOD_KEY].reduce((acc, method) => {\n    acc[method] = mapFunction(method);\n    return acc;\n  }, {});\n}\n/**\n * Factory function to create the component templates only once\n * @param   {Function} template - component template creation function\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @returns {TemplateChunk} template chunk object\n */\n\n\nfunction componentTemplateFactory(template, componentWrapper) {\n  const components = createSubcomponents(componentWrapper.exports ? componentWrapper.exports.components : {});\n  return template(create, expressionTypes, bindingTypes, name => {\n    // improve support for recursive components\n    if (name === componentWrapper.name) return memoizedCreateComponent(componentWrapper); // return the registered components\n\n    return components[name] || COMPONENTS_IMPLEMENTATION_MAP$1.get(name);\n  });\n}\n/**\n * Create a pure component\n * @param   {Function} pureFactoryFunction - pure component factory function\n * @param   {Array} options.slots - component slots\n * @param   {Array} options.attributes - component attributes\n * @param   {Array} options.template - template factory function\n * @param   {Array} options.template - template factory function\n * @param   {any} options.props - initial component properties\n * @returns {Object} pure component object\n */\n\n\nfunction createPureComponent(pureFactoryFunction, _ref) {\n  let {\n    slots,\n    attributes,\n    props,\n    css,\n    template\n  } = _ref;\n  if (template) panic('Pure components can not have html');\n  if (css) panic('Pure components do not have css');\n  const component = defineDefaults(pureFactoryFunction({\n    slots,\n    attributes,\n    props\n  }), PURE_COMPONENT_API);\n  return createCoreAPIMethods(method => function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    // intercept the mount calls to bind the DOM node to the pure object created\n    // see also https://github.com/riot/riot/issues/2806\n    if (method === MOUNT_METHOD_KEY) {\n      const [element] = args; // mark this node as pure element\n\n      defineProperty(element, IS_PURE_SYMBOL, true);\n      bindDOMNodeToComponentObject(element, component);\n    }\n\n    component[method](...args);\n    return component;\n  });\n}\n/**\n * Create the component interface needed for the @riotjs/dom-bindings tag bindings\n * @param   {RiotComponentWrapper} componentWrapper - riot compiler generated object\n * @param   {string} componentWrapper.css - component css\n * @param   {Function} componentWrapper.template - function that will return the dom-bindings template function\n * @param   {Object} componentWrapper.exports - component interface\n * @param   {string} componentWrapper.name - component name\n * @returns {Object} component like interface\n */\n\n\nfunction createComponent(componentWrapper) {\n  const {\n    css,\n    template,\n    exports,\n    name\n  } = componentWrapper;\n  const templateFn = template ? componentTemplateFactory(template, componentWrapper) : MOCKED_TEMPLATE_INTERFACE;\n  return _ref2 => {\n    let {\n      slots,\n      attributes,\n      props\n    } = _ref2;\n    // pure components rendering will be managed by the end user\n    if (exports && exports[IS_PURE_SYMBOL]) return createPureComponent(exports, {\n      slots,\n      attributes,\n      props,\n      css,\n      template\n    });\n    const componentAPI = callOrAssign(exports) || {};\n    const component = defineComponent({\n      css,\n      template: templateFn,\n      componentAPI,\n      name\n    })({\n      slots,\n      attributes,\n      props\n    }); // notice that for the components create via tag binding\n    // we need to invert the mount (state/parentScope) arguments\n    // the template bindings will only forward the parentScope updates\n    // and never deal with the component state\n\n    return {\n      mount(element, parentScope, state) {\n        return component.mount(element, state, parentScope);\n      },\n\n      update(parentScope, state) {\n        return component.update(state, parentScope);\n      },\n\n      unmount(preserveRoot) {\n        return component.unmount(preserveRoot);\n      }\n\n    };\n  };\n}\n/**\n * Component definition function\n * @param   {Object} implementation - the componen implementation will be generated via compiler\n * @param   {Object} component - the component initial properties\n * @returns {Object} a new component implementation object\n */\n\nfunction defineComponent(_ref3) {\n  let {\n    css,\n    template,\n    componentAPI,\n    name\n  } = _ref3;\n  // add the component css into the DOM\n  if (css && name) cssManager.add(name, css);\n  return curry(enhanceComponentAPI)(defineProperties( // set the component defaults without overriding the original component API\n  defineDefaults(componentAPI, Object.assign({}, COMPONENT_LIFECYCLE_METHODS, {\n    [PROPS_KEY]: {},\n    [STATE_KEY]: {}\n  })), Object.assign({\n    // defined during the component creation\n    [SLOTS_KEY]: null,\n    [ROOT_KEY]: null\n  }, COMPONENT_CORE_HELPERS, {\n    name,\n    css,\n    template\n  })));\n}\n/**\n * Create the bindings to update the component attributes\n * @param   {HTMLElement} node - node where we will bind the expressions\n * @param   {Array} attributes - list of attribute bindings\n * @returns {TemplateChunk} - template bindings object\n */\n\nfunction createAttributeBindings(node, attributes) {\n  if (attributes === void 0) {\n    attributes = [];\n  }\n\n  const expressions = attributes.map(a => create$4(node, a));\n  const binding = {};\n  return Object.assign(binding, Object.assign({\n    expressions\n  }, createCoreAPIMethods(method => scope => {\n    expressions.forEach(e => e[method](scope));\n    return binding;\n  })));\n}\n/**\n * Create the subcomponents that can be included inside a tag in runtime\n * @param   {Object} components - components imported in runtime\n * @returns {Object} all the components transformed into Riot.Component factory functions\n */\n\n\nfunction createSubcomponents(components) {\n  if (components === void 0) {\n    components = {};\n  }\n\n  return Object.entries(callOrAssign(components)).reduce((acc, _ref4) => {\n    let [key, value] = _ref4;\n    acc[camelToDashCase(key)] = createComponent(value);\n    return acc;\n  }, {});\n}\n/**\n * Run the component instance through all the plugins set by the user\n * @param   {Object} component - component instance\n * @returns {Object} the component enhanced by the plugins\n */\n\n\nfunction runPlugins(component) {\n  return [...PLUGINS_SET$1].reduce((c, fn) => fn(c) || c, component);\n}\n/**\n * Compute the component current state merging it with its previous state\n * @param   {Object} oldState - previous state object\n * @param   {Object} newState - new state givent to the `update` call\n * @returns {Object} new object state\n */\n\n\nfunction computeState(oldState, newState) {\n  return Object.assign({}, oldState, callOrAssign(newState));\n}\n/**\n * Add eventually the \"is\" attribute to link this DOM node to its css\n * @param {HTMLElement} element - target root node\n * @param {string} name - name of the component mounted\n * @returns {undefined} it's a void function\n */\n\n\nfunction addCssHook(element, name) {\n  if (getName(element) !== name) {\n    set(element, IS_DIRECTIVE, name);\n  }\n}\n/**\n * Component creation factory function that will enhance the user provided API\n * @param   {Object} component - a component implementation previously defined\n * @param   {Array} options.slots - component slots generated via riot compiler\n * @param   {Array} options.attributes - attribute expressions generated via riot compiler\n * @returns {Riot.Component} a riot component instance\n */\n\n\nfunction enhanceComponentAPI(component, _ref5) {\n  let {\n    slots,\n    attributes,\n    props\n  } = _ref5;\n  return autobindMethods(runPlugins(defineProperties(isObject(component) ? Object.create(component) : component, {\n    mount(element, state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      // any element mounted passing through this function can't be a pure component\n      defineProperty(element, IS_PURE_SYMBOL, false);\n      this[PARENT_KEY_SYMBOL] = parentScope;\n      this[ATTRIBUTES_KEY_SYMBOL] = createAttributeBindings(element, attributes).mount(parentScope);\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, evaluateInitialProps(element, props), evaluateAttributeExpressions(this[ATTRIBUTES_KEY_SYMBOL].expressions))));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[TEMPLATE_KEY_SYMBOL] = this.template.createDOM(element).clone(); // link this object to the DOM node\n\n      bindDOMNodeToComponentObject(element, this); // add eventually the 'is' attribute\n\n      component.name && addCssHook(element, component.name); // define the root element\n\n      defineProperty(this, ROOT_KEY, element); // define the slots array\n\n      defineProperty(this, SLOTS_KEY, slots); // before mount lifecycle event\n\n      this[ON_BEFORE_MOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]); // mount the template\n\n      this[TEMPLATE_KEY_SYMBOL].mount(element, this, parentScope);\n      this[ON_MOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    },\n\n    update(state, parentScope) {\n      if (state === void 0) {\n        state = {};\n      }\n\n      if (parentScope) {\n        this[PARENT_KEY_SYMBOL] = parentScope;\n        this[ATTRIBUTES_KEY_SYMBOL].update(parentScope);\n      }\n\n      const newProps = evaluateAttributeExpressions(this[ATTRIBUTES_KEY_SYMBOL].expressions);\n      if (this[SHOULD_UPDATE_KEY](newProps, this[PROPS_KEY]) === false) return;\n      defineProperty(this, PROPS_KEY, Object.freeze(Object.assign({}, this[PROPS_KEY], newProps)));\n      this[STATE_KEY] = computeState(this[STATE_KEY], state);\n      this[ON_BEFORE_UPDATE_KEY](this[PROPS_KEY], this[STATE_KEY]); // avoiding recursive updates\n      // see also https://github.com/riot/riot/issues/2895\n\n      if (!this[IS_COMPONENT_UPDATING]) {\n        this[IS_COMPONENT_UPDATING] = true;\n        this[TEMPLATE_KEY_SYMBOL].update(this, this[PARENT_KEY_SYMBOL]);\n      }\n\n      this[ON_UPDATED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[IS_COMPONENT_UPDATING] = false;\n      return this;\n    },\n\n    unmount(preserveRoot) {\n      this[ON_BEFORE_UNMOUNT_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      this[ATTRIBUTES_KEY_SYMBOL].unmount(); // if the preserveRoot is null the template html will be left untouched\n      // in that case the DOM cleanup will happen differently from a parent node\n\n      this[TEMPLATE_KEY_SYMBOL].unmount(this, this[PARENT_KEY_SYMBOL], preserveRoot === null ? null : !preserveRoot);\n      this[ON_UNMOUNTED_KEY](this[PROPS_KEY], this[STATE_KEY]);\n      return this;\n    }\n\n  })), Object.keys(component).filter(prop => isFunction(component[prop])));\n}\n/**\n * Component initialization function starting from a DOM node\n * @param   {HTMLElement} element - element to upgrade\n * @param   {Object} initialProps - initial component properties\n * @param   {string} componentName - component id\n * @returns {Object} a new component instance bound to a DOM node\n */\n\nfunction mountComponent(element, initialProps, componentName) {\n  const name = componentName || getName(element);\n  if (!COMPONENTS_IMPLEMENTATION_MAP$1.has(name)) panic(`The component named \"${name}\" was never registered`);\n  const component = COMPONENTS_IMPLEMENTATION_MAP$1.get(name)({\n    props: initialProps\n  });\n  return component.mount(element);\n}\n\n/**\n * Similar to compose but performs from left-to-right function composition.<br/>\n * {@link https://30secondsofcode.org/function#composeright see also}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n/**\n * Performs right-to-left function composition.<br/>\n * Use Array.prototype.reduce() to perform right-to-left function composition.<br/>\n * The last (rightmost) function can accept one or more arguments; the remaining functions must be unary.<br/>\n * {@link https://30secondsofcode.org/function#compose original source code}\n * @param   {...[function]} fns) - list of unary function\n * @returns {*} result of the computation\n */\n\nfunction compose() {\n  for (var _len2 = arguments.length, fns = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return fns.reduce((f, g) => function () {\n    return f(g(...arguments));\n  });\n}\n\nconst {\n  DOM_COMPONENT_INSTANCE_PROPERTY,\n  COMPONENTS_IMPLEMENTATION_MAP,\n  PLUGINS_SET\n} = globals;\n/**\n * Riot public api\n */\n\n/**\n * Register a custom tag by name\n * @param   {string} name - component name\n * @param   {Object} implementation - tag implementation\n * @returns {Map} map containing all the components implementations\n */\n\nfunction register(name, _ref) {\n  let {\n    css,\n    template,\n    exports\n  } = _ref;\n  if (COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component \"${name}\" was already registered`);\n  COMPONENTS_IMPLEMENTATION_MAP.set(name, createComponent({\n    name,\n    css,\n    template,\n    exports\n  }));\n  return COMPONENTS_IMPLEMENTATION_MAP;\n}\n/**\n * Unregister a riot web component\n * @param   {string} name - component name\n * @returns {Map} map containing all the components implementations\n */\n\nfunction unregister(name) {\n  if (!COMPONENTS_IMPLEMENTATION_MAP.has(name)) panic(`The component \"${name}\" was never registered`);\n  COMPONENTS_IMPLEMENTATION_MAP.delete(name);\n  cssManager.remove(name);\n  return COMPONENTS_IMPLEMENTATION_MAP;\n}\n/**\n * Mounting function that will work only for the components that were globally registered\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {Object} initialProps - the initial component properties\n * @param   {string} name - optional component name\n * @returns {Array} list of riot components\n */\n\nfunction mount(selector, initialProps, name) {\n  return $(selector).map(element => mountComponent(element, initialProps, name));\n}\n/**\n * Sweet unmounting helper function for the DOM node mounted manually by the user\n * @param   {string|HTMLElement} selector - query for the selection or a DOM element\n * @param   {boolean|null} keepRootElement - if true keep the root element\n * @returns {Array} list of nodes unmounted\n */\n\nfunction unmount(selector, keepRootElement) {\n  return $(selector).map(element => {\n    if (element[DOM_COMPONENT_INSTANCE_PROPERTY]) {\n      element[DOM_COMPONENT_INSTANCE_PROPERTY].unmount(keepRootElement);\n    }\n\n    return element;\n  });\n}\n/**\n * Define a riot plugin\n * @param   {Function} plugin - function that will receive all the components created\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction install(plugin) {\n  if (!isFunction(plugin)) panic('Plugins must be of type function');\n  if (PLUGINS_SET.has(plugin)) panic('This plugin was already installed');\n  PLUGINS_SET.add(plugin);\n  return PLUGINS_SET;\n}\n/**\n * Uninstall a riot plugin\n * @param   {Function} plugin - plugin previously installed\n * @returns {Set} the set containing all the plugins installed\n */\n\nfunction uninstall(plugin) {\n  if (!PLUGINS_SET.has(plugin)) panic('This plugin was never installed');\n  PLUGINS_SET.delete(plugin);\n  return PLUGINS_SET;\n}\n/**\n * Helper method to create component without relying on the registered ones\n * @param   {Object} implementation - component implementation\n * @returns {Function} function that will allow you to mount a riot component on a DOM node\n */\n\nfunction component(implementation) {\n  return function (el, props, _temp) {\n    let {\n      slots,\n      attributes,\n      parentScope\n    } = _temp === void 0 ? {} : _temp;\n    return compose(c => c.mount(el, parentScope), c => c({\n      props,\n      slots,\n      attributes\n    }), createComponent)(implementation);\n  };\n}\n/**\n * Lift a riot component Interface into a pure riot object\n * @param   {Function} func - RiotPureComponent factory function\n * @returns {Function} the lifted original function received as argument\n */\n\nfunction pure(func) {\n  if (!isFunction(func)) panic('riot.pure accepts only arguments of type \"function\"');\n  func[IS_PURE_SYMBOL] = true;\n  return func;\n}\n/**\n * no-op function needed to add the proper types to your component via typescript\n * @param {Function|Object} component - component default export\n * @returns {Function|Object} returns exactly what it has received\n */\n\nconst withTypes = component => component;\n/** @type {string} current riot version */\n\nconst version = 'v6.1.2'; // expose some internal stuff that might be used from external tools\n\nconst __ = {\n  cssManager,\n  DOMBindings,\n  createComponent,\n  defineComponent,\n  globals\n};\n\nexport { __, component, install, mount, pure, register, uninstall, unmount, unregister, version, withTypes };\n","export const ROUTER_COMPONENT = Symbol('riouter')\n\nexport default {\n  ROUTER_COMPONENT,\n}\n","// Import external modules.\nimport bindingTypes from '@riotjs/util/binding-types.js'\nimport template from '@riotjs/dom-bindings/src/template.js'\n\n// Import internal libraries.\nimport { pure } from 'riot'\nimport { ROUTER_COMPONENT } from '../util/symbols.js'\n\nexport default {\n  name: 'route',\n  exports: pure((data) => {\n    const getAttribute = name => data && data.attributes && data.attributes.find(attribute => attribute.name === name)\n\n    return {\n      // Lifecycle methods.\n      mount (element, context) {\n        // Exit early if there are no slots.\n        if (!data || !data.slots || !data.slots.length) {\n          return\n        }\n\n        this.active = false\n        this.el = this.root = element\n        this.state = {}\n\n        // Add template.\n        this.slot = template(null, [{\n          type: bindingTypes.SLOT,\n          name: 'default',\n        }])\n\n        // Get router from parent component.\n        this.router = context[ROUTER_COMPONENT].router\n\n        this.route = this.root.getAttribute('path')\n        if (!this.route) {\n          throw new Error('No path found for route component.')\n        }\n        this.router.addRoute(this.route)\n\n        this.handleRouteChange = ({ route }) => {\n          const active = this.route === route\n          if (this.active === active) {\n            return\n          }\n          this.active = active\n\n          // Update context.\n          this.update(context)\n        }\n\n        this.router.addListener('pushed', this.handleRouteChange)\n      },\n      unmount (...args) {\n        // Stop listening to router changes\n        this.router.removeListener('pushed', this.handleRouteChange)\n\n        // Remove route from router.\n        this.router.removeRoute(this.route)\n\n        // Unmount slot.\n        this.slot.unmount(...args)\n      },\n      update (context) {\n        if (this.active) {\n          // Dispatch on mounted event.\n          const onBeforeMount = getAttribute('onBeforeMount')\n          if (onBeforeMount) {\n            onBeforeMount.evaluate(context)(this, this.router, this.route)\n          }\n\n          const element = document.createElement('div')\n          this.root.appendChild(element)\n          this.slot.mount(element, {\n            slots: data.slots,\n          }, context)\n\n          // Dispatch on mounted event.\n          const onMounted = getAttribute('onMounted')\n          if (onMounted) {\n            onMounted.evaluate(context)(this, this.router, this.route)\n          }\n        } else {\n          // Dispatch on unmounted event.\n          const onBeforeUnmount = getAttribute('onBeforeUnmount')\n          if (onBeforeUnmount) {\n            onBeforeUnmount.evaluate(context)(this, this.router, this.route)\n          }\n\n          this.slot.unmount({\n            slots: data.slots,\n          }, context, true)\n\n          // Dispatch on unmounted event.\n          const onUnmounted = getAttribute('onUnmounted')\n          if (onUnmounted) {\n            onUnmounted.evaluate(context)(this, this.router, this.route)\n          }\n        }\n      },\n    }\n  }),\n}\n","// Import external modules.\nimport bindingTypes from '@riotjs/util/binding-types.js'\nimport template from '@riotjs/dom-bindings/src/template.js'\n\n// Import internal libraries.\nimport Router from '../Router.js'\nimport { pure } from 'riot'\nimport { ROUTER_COMPONENT } from '../util/symbols.js'\n\nconst defer = window.requestAnimationFrame || window.setTimeout\nconst cancelDefer = window.cancelAnimationFrame || window.clearTimeout\n\nexport default {\n  name: 'router',\n  exports: pure((data) => {\n    const getAttribute = name => data && data.attributes && data.attributes.find((attribute) => attribute.name === name)\n\n    const getBase = (context) => {\n      const base = getAttribute('base')\n      if (base) {\n        return base.evaluate(context)\n      }\n      return window.location.protocol + '//' + window.location.host\n    }\n\n    return {\n      // Lifecycle methods.\n      mount (element, context) {\n        if (!data || !data.slots || !data.slots.length) {\n          return\n        }\n\n        // Set root element.\n        const routerElement = document.createElement('div')\n        element.appendChild(routerElement)\n        this.el = this.root = routerElement\n\n        this.state = {}\n        let updateHistory = getAttribute('updateHistory')\n        updateHistory = updateHistory ? (!!updateHistory.evaluate(context)) : false\n        this.router = new Router({\n          basePath: getBase(),\n          updateHistory: updateHistory,\n        })\n\n        // Immidiatly push location.\n        this.router.push(window.location.href)\n\n        this.slot = template(null, [{\n          type: bindingTypes.SLOT,\n          name: 'default',\n        }])\n\n        // Add this to context.\n        context[ROUTER_COMPONENT] = this\n\n        const onBeforeStart = getAttribute('onBeforeStart')\n        if (onBeforeStart) {\n          onBeforeStart.evaluate(context)(this, this.router)\n        }\n\n        this.slot.mount(this.root, {\n          slots: data.slots,\n        }, context)\n\n        const onStarted = getAttribute('onStarted')\n        if (onStarted) {\n          onStarted.evaluate(context)(this, this.router)\n        }\n      },\n      unmount (...args) {\n        // Unmount underlying components.\n        if (this.slot) {\n          this.slot.unmount(...args)\n        }\n\n        // Remove element.\n        this.root.remove()\n\n        // Destroy router.\n        this.router.destroy()\n      },\n      update () {\n        // Defer update to prevent endless recursion.\n        if (this.slot) {\n          if (this.deferred) {\n            cancelDefer(this.deferred)\n          }\n\n          this.deferred = defer(() => {\n            this.slot.update({}, this)\n          })\n        }\n      },\n    }\n  }),\n}\n"],"names":["Dispatcher","constructor","_events","destroy","addListener","name","callback","Object","prototype","hasOwnProperty","call","indexOf","push","removeListener","length","index","splice","removeAllListeners","dispatch","data","forEach","Router","options","_options","assign","basePath","updateHistory","pathToRegexp","_pathCurrent","_routes","_routeCurrent","getPath","addRoute","path","regexp","test","_path","route","router","removeRoute","getRoutes","keys","pathNew","replace","routeNew","routePath","match","window","url","includes","history","location","pushState","document","title","EACH","IF","SIMPLE","TAG","SLOT","dashToCamelCase","moveChildren","cleanNode","clearChildren","removeChild","insertBefore","replaceChild","IS_PURE_SYMBOL","PARENT_KEY_SYMBOL","ATTRIBUTE","EVENT","TEXT","VALUE","HEAD_SYMBOL","TAIL_SYMBOL","createHeadTailPlaceholders","createTemplateMeta","defineProperty","checkType","isSvg","isTemplate","isFunction","isBoolean","isObject","isNil","UNMOUNT_SCOPE","EachBinding","createPatch","udomdiff","patch","mustFilterItem","extendScope","create","IfBinding","memoize","evaluateAttributeExpressions","ElementProto","isNativeHtmlProperty","setAllAttributes","attributeExpression","removeAllAttributes","canRenderAttribute","shouldRemoveAttribute","normalizeValue","RE_EVENTS_PREFIX","getCallbackAndOptions","EventListener","ListenersWeakMap","createListener","eventExpression","normalizeStringValue","getTextNode","textExpression","valueExpression","Expression","apply","expressions","flattenCollectionMethods","createExpression","extendParentScope","getRealParent","SlotBinding","template","moveSlotInnerContent","createSlot","getTag","slotsToMarkup","slotBindings","TagBinding","SimpleBinding","fixTextExpressionsOffset","bindings","createHTMLTree","createSVGTree","createDOMTree","injectDOM","createTemplateDOM","getTemplateTagOffset","TemplateChunk","createBinding","ROUTER_COMPONENT","Symbol","exports","pure","getAttribute","attributes","find","attribute","mount","element","context","slots","active","el","root","state","slot","type","bindingTypes","Error","handleRouteChange","update","unmount","onBeforeMount","evaluate","createElement","appendChild","onMounted","onBeforeUnmount","onUnmounted","defer","requestAnimationFrame","setTimeout","cancelDefer","cancelAnimationFrame","clearTimeout","getBase","base","protocol","host","routerElement","href","onBeforeStart","onStarted","remove","deferred"],"mappings":"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"}